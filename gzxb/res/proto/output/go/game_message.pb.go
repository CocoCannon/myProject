// Code generated by protoc-gen-go. DO NOT EDIT.
// source: game_message.proto

/*
Package Game is a generated protocol buffer package.

It is generated from these files:
	game_message.proto

It has these top-level messages:
	LoginGameReq
	LoginGameRsp
	SyncMoneyRsp
	EnterGameRsp
	GameBeginRsp
	GameEndRsp
	UnlockHerosRsp
	SetRatioReq
	SetRatioRsp
	BetExtraInfo
	BetRsp
	InvalidScoreRsp
	Card
	OpenOneCardReq
	UseOneCardReq
	SyncInitCardRsp
	SyncCardRsp
	EntityInfo
	EquipHeroReq
	UnEquipHeroReq
	PositionInfo
	SyncInitPositionRsp
	SyncAllPositionRsp
	ChangePositionReq
	ChangePositionRsp
	SyncInitEntityRsp
	EntitySpawnRsp
	EntityDeathRsp
	AttackEntityReq
	KillEntityReq
	SyncStoryData
	AllergenData
	AllergenAttackReq
	AllergenAttackRsp
	AllergenSettleRsp
	ResetAllergenSettleFlagReq
	ClownCard
	ClownData
	ClownOpenAllCardReq
	ClownOpenAllCardRsp
	ClownSettleRsp
	ResetClownSettleFlagReq
	Message
	HttpResult
	AllocServer
	AllocServerAddressResp
	QPPartnerUserLoginReq
	WechatSignReq
	PingGameReq
	PingGameRsp
	JoinRoomReq
	JoinRoomRsp
	LeaveRoomReq
	LeaveRoomRsp
	StartGameReq
	StartGameRsp
	RestartGameReq
	RestartGameRsp
	OpenOneCardRsp
	UseOneCardRsp
	EquipHeroRsp
	UnEquipHeroRsp
	RespawnEntityRsp
	LogoutGameReq
	LogoutGameRsp
*/
package Game

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 游戏操作码
type PROTOCOL int32

const (
	PROTOCOL_BASE_MESSAGE                   PROTOCOL = 1
	PROTOCOL_ALLOC_SERVER                   PROTOCOL = 13
	PROTOCOL_ALLOC_SERVER_ADDRESS_RSP       PROTOCOL = 14
	PROTOCOL_PARTNER_USER_LOGIN_REQ         PROTOCOL = 16
	PROTOCOL_WECHAT_SIGN_REQ                PROTOCOL = 17
	PROTOCOL_HTTP_RESULT                    PROTOCOL = 50
	PROTOCOL_LOGIN_GAME_REQ                 PROTOCOL = 1000
	PROTOCOL_LOGIN_GAME_RSP                 PROTOCOL = 1001
	PROTOCOL_LOGOUT_GAME_REQ                PROTOCOL = 1002
	PROTOCOL_LOGOUT_GAME_RSP                PROTOCOL = 1003
	PROTOCOL_PING_GAME_REQ                  PROTOCOL = 1004
	PROTOCOL_PING_GAME_RSP                  PROTOCOL = 1005
	PROTOCOL_SYNC_MONEY_RSP                 PROTOCOL = 1008
	PROTOCOL_JOIN_ROOM_REQ                  PROTOCOL = 1100
	PROTOCOL_JOIN_ROOM_RSP                  PROTOCOL = 1101
	PROTOCOL_LEAVE_ROOM_REQ                 PROTOCOL = 1102
	PROTOCOL_LEAVE_ROOM_RSP                 PROTOCOL = 1103
	PROTOCOL_ENTER_GAME_RSP                 PROTOCOL = 1200
	PROTOCOL_START_GAME_REQ                 PROTOCOL = 1201
	PROTOCOL_START_GAME_RSP                 PROTOCOL = 1202
	PROTOCOL_RESTART_GAME_REQ               PROTOCOL = 1203
	PROTOCOL_RESTART_GAME_RSP               PROTOCOL = 1204
	PROTOCOL_GAME_BEGIN_RSP                 PROTOCOL = 1205
	PROTOCOL_GAME_END_RSP                   PROTOCOL = 1208
	PROTOCOL_SET_RATIO_REQ                  PROTOCOL = 1210
	PROTOCOL_SET_RATIO_RSP                  PROTOCOL = 1211
	PROTOCOL_BET_RSP                        PROTOCOL = 1212
	PROTOCOL_INVALID_SCORE_RSP              PROTOCOL = 1213
	PROTOCOL_OPEN_ONE_CARD_REQ              PROTOCOL = 1220
	PROTOCOL_OPEN_ONE_CARD_RSP              PROTOCOL = 1221
	PROTOCOL_USE_ONE_CARD_REQ               PROTOCOL = 1222
	PROTOCOL_USE_ONE_CARD_RSP               PROTOCOL = 1223
	PROTOCOL_SYNC_CARD_RSP                  PROTOCOL = 1224
	PROTOCOL_SYNC_INIT_CARD_RSP             PROTOCOL = 1225
	PROTOCOL_EQUIP_HERO_REQ                 PROTOCOL = 1230
	PROTOCOL_EQUIP_HERO_RSP                 PROTOCOL = 1231
	PROTOCOL_UNEQUIP_HERO_REQ               PROTOCOL = 1232
	PROTOCOL_UNEQUIP_HERO_RSP               PROTOCOL = 1233
	PROTOCOL_CHANGE_HERO_POSITION_REQ       PROTOCOL = 1234
	PROTOCOL_CHANGE_HERO_POSITION_RSP       PROTOCOL = 1235
	PROTOCOL_SYNC_INIT_POSITION_RSP         PROTOCOL = 1236
	PROTOCOL_SYNC_ALL_POSITION_RSP          PROTOCOL = 1237
	PROTOCOL_ENTITY_SPAWN_RSP               PROTOCOL = 1240
	PROTOCOL_ATTACK_ENTITY_REQ              PROTOCOL = 1241
	PROTOCOL_ENTITY_DEATH_RSP               PROTOCOL = 1242
	PROTOCOL_KILL_ENTITY_REQ                PROTOCOL = 1243
	PROTOCOL_SYNC_INIT_ENTITY_RSP           PROTOCOL = 1244
	PROTOCOL_UNLOCK_HEROS_RSP               PROTOCOL = 1245
	PROTOCOL_SYNC_STORY_DATA                PROTOCOL = 1253
	PROTOCOL_ALLERGEN_ATTACK_REQ            PROTOCOL = 1255
	PROTOCOL_ALLERGEN_ATTACK_RSP            PROTOCOL = 1256
	PROTOCOL_ALLERGEN_SETTLE_RSP            PROTOCOL = 1257
	PROTOCOL_RESET_ALLERGEN_SETTLE_FLAG_REQ PROTOCOL = 1258
	PROTOCOL_CLOWN_OPEN_ALL_CARD_REQ        PROTOCOL = 1260
	PROTOCOL_CLOWN_OPEN_ALL_CARD_RSP        PROTOCOL = 1261
	PROTOCOL_CLOWN_SETTLE_RSP               PROTOCOL = 1262
	PROTOCOL_RESET_CLOWN_SETTLE_FLAG_REQ    PROTOCOL = 1263
)

var PROTOCOL_name = map[int32]string{
	1:    "BASE_MESSAGE",
	13:   "ALLOC_SERVER",
	14:   "ALLOC_SERVER_ADDRESS_RSP",
	16:   "PARTNER_USER_LOGIN_REQ",
	17:   "WECHAT_SIGN_REQ",
	50:   "HTTP_RESULT",
	1000: "LOGIN_GAME_REQ",
	1001: "LOGIN_GAME_RSP",
	1002: "LOGOUT_GAME_REQ",
	1003: "LOGOUT_GAME_RSP",
	1004: "PING_GAME_REQ",
	1005: "PING_GAME_RSP",
	1008: "SYNC_MONEY_RSP",
	1100: "JOIN_ROOM_REQ",
	1101: "JOIN_ROOM_RSP",
	1102: "LEAVE_ROOM_REQ",
	1103: "LEAVE_ROOM_RSP",
	1200: "ENTER_GAME_RSP",
	1201: "START_GAME_REQ",
	1202: "START_GAME_RSP",
	1203: "RESTART_GAME_REQ",
	1204: "RESTART_GAME_RSP",
	1205: "GAME_BEGIN_RSP",
	1208: "GAME_END_RSP",
	1210: "SET_RATIO_REQ",
	1211: "SET_RATIO_RSP",
	1212: "BET_RSP",
	1213: "INVALID_SCORE_RSP",
	1220: "OPEN_ONE_CARD_REQ",
	1221: "OPEN_ONE_CARD_RSP",
	1222: "USE_ONE_CARD_REQ",
	1223: "USE_ONE_CARD_RSP",
	1224: "SYNC_CARD_RSP",
	1225: "SYNC_INIT_CARD_RSP",
	1230: "EQUIP_HERO_REQ",
	1231: "EQUIP_HERO_RSP",
	1232: "UNEQUIP_HERO_REQ",
	1233: "UNEQUIP_HERO_RSP",
	1234: "CHANGE_HERO_POSITION_REQ",
	1235: "CHANGE_HERO_POSITION_RSP",
	1236: "SYNC_INIT_POSITION_RSP",
	1237: "SYNC_ALL_POSITION_RSP",
	1240: "ENTITY_SPAWN_RSP",
	1241: "ATTACK_ENTITY_REQ",
	1242: "ENTITY_DEATH_RSP",
	1243: "KILL_ENTITY_REQ",
	1244: "SYNC_INIT_ENTITY_RSP",
	1245: "UNLOCK_HEROS_RSP",
	1253: "SYNC_STORY_DATA",
	1255: "ALLERGEN_ATTACK_REQ",
	1256: "ALLERGEN_ATTACK_RSP",
	1257: "ALLERGEN_SETTLE_RSP",
	1258: "RESET_ALLERGEN_SETTLE_FLAG_REQ",
	1260: "CLOWN_OPEN_ALL_CARD_REQ",
	1261: "CLOWN_OPEN_ALL_CARD_RSP",
	1262: "CLOWN_SETTLE_RSP",
	1263: "RESET_CLOWN_SETTLE_FLAG_REQ",
}
var PROTOCOL_value = map[string]int32{
	"BASE_MESSAGE":                   1,
	"ALLOC_SERVER":                   13,
	"ALLOC_SERVER_ADDRESS_RSP":       14,
	"PARTNER_USER_LOGIN_REQ":         16,
	"WECHAT_SIGN_REQ":                17,
	"HTTP_RESULT":                    50,
	"LOGIN_GAME_REQ":                 1000,
	"LOGIN_GAME_RSP":                 1001,
	"LOGOUT_GAME_REQ":                1002,
	"LOGOUT_GAME_RSP":                1003,
	"PING_GAME_REQ":                  1004,
	"PING_GAME_RSP":                  1005,
	"SYNC_MONEY_RSP":                 1008,
	"JOIN_ROOM_REQ":                  1100,
	"JOIN_ROOM_RSP":                  1101,
	"LEAVE_ROOM_REQ":                 1102,
	"LEAVE_ROOM_RSP":                 1103,
	"ENTER_GAME_RSP":                 1200,
	"START_GAME_REQ":                 1201,
	"START_GAME_RSP":                 1202,
	"RESTART_GAME_REQ":               1203,
	"RESTART_GAME_RSP":               1204,
	"GAME_BEGIN_RSP":                 1205,
	"GAME_END_RSP":                   1208,
	"SET_RATIO_REQ":                  1210,
	"SET_RATIO_RSP":                  1211,
	"BET_RSP":                        1212,
	"INVALID_SCORE_RSP":              1213,
	"OPEN_ONE_CARD_REQ":              1220,
	"OPEN_ONE_CARD_RSP":              1221,
	"USE_ONE_CARD_REQ":               1222,
	"USE_ONE_CARD_RSP":               1223,
	"SYNC_CARD_RSP":                  1224,
	"SYNC_INIT_CARD_RSP":             1225,
	"EQUIP_HERO_REQ":                 1230,
	"EQUIP_HERO_RSP":                 1231,
	"UNEQUIP_HERO_REQ":               1232,
	"UNEQUIP_HERO_RSP":               1233,
	"CHANGE_HERO_POSITION_REQ":       1234,
	"CHANGE_HERO_POSITION_RSP":       1235,
	"SYNC_INIT_POSITION_RSP":         1236,
	"SYNC_ALL_POSITION_RSP":          1237,
	"ENTITY_SPAWN_RSP":               1240,
	"ATTACK_ENTITY_REQ":              1241,
	"ENTITY_DEATH_RSP":               1242,
	"KILL_ENTITY_REQ":                1243,
	"SYNC_INIT_ENTITY_RSP":           1244,
	"UNLOCK_HEROS_RSP":               1245,
	"SYNC_STORY_DATA":                1253,
	"ALLERGEN_ATTACK_REQ":            1255,
	"ALLERGEN_ATTACK_RSP":            1256,
	"ALLERGEN_SETTLE_RSP":            1257,
	"RESET_ALLERGEN_SETTLE_FLAG_REQ": 1258,
	"CLOWN_OPEN_ALL_CARD_REQ":        1260,
	"CLOWN_OPEN_ALL_CARD_RSP":        1261,
	"CLOWN_SETTLE_RSP":               1262,
	"RESET_CLOWN_SETTLE_FLAG_REQ":    1263,
}

func (x PROTOCOL) Enum() *PROTOCOL {
	p := new(PROTOCOL)
	*p = x
	return p
}
func (x PROTOCOL) String() string {
	return proto.EnumName(PROTOCOL_name, int32(x))
}
func (x *PROTOCOL) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PROTOCOL_value, data, "PROTOCOL")
	if err != nil {
		return err
	}
	*x = PROTOCOL(value)
	return nil
}
func (PROTOCOL) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// 回应码
type ErrorCode int32

const (
	// 以下是大厅的错误回应码(与大厅的回应保持一致)，不要修改
	ErrorCode_SUCCESS                         ErrorCode = 0
	ErrorCode_PARAM_ERROR                     ErrorCode = 1
	ErrorCode_NOT_REIGSTER                    ErrorCode = 2
	ErrorCode_PLAYER_NOT_EXIST                ErrorCode = 3
	ErrorCode_DESERIALIZE_FAILED              ErrorCode = 4
	ErrorCode_FRESH_USER_MONEY_ERROR          ErrorCode = 5
	ErrorCode_SYSTEM_ERROR                    ErrorCode = 6
	ErrorCode_ENTER_ROOM_LOCK_FAILED          ErrorCode = 10001
	ErrorCode_ENTER_ROOM_GET_BASE_INFO_FAILED ErrorCode = 10002
	ErrorCode_ENTER_ROOM_READ_GOLD_FAILED     ErrorCode = 10003
	ErrorCode_ENTER_ROOM_LACK_GOLD_FAILED     ErrorCode = 10004
	ErrorCode_ENTER_ROOM_LOAD_DATA_FAILED     ErrorCode = 10005
	// 以下是自定义的错误回应码
	ErrorCode_ACCOUNT_REMOTE_LOGIN           ErrorCode = 20000
	ErrorCode_START_GAME_STATUS_ERROR        ErrorCode = 20100
	ErrorCode_RESTART_GAME_STATUS_ERROR      ErrorCode = 20101
	ErrorCode_SET_RATIO_NOT_EXIST            ErrorCode = 20200
	ErrorCode_SET_RATIO_LACK_GOLD_FAILED     ErrorCode = 20201
	ErrorCode_SET_RATIO_STORY_LOCKED_FAILED  ErrorCode = 20203
	ErrorCode_CARD_OPEN_LACK_GOLD_FAILED     ErrorCode = 20300
	ErrorCode_CARD_ALREADY_OPENED            ErrorCode = 20301
	ErrorCode_CARD_ALREADY_USED              ErrorCode = 20302
	ErrorCode_CARD_NOT_ALLOW_USE             ErrorCode = 20303
	ErrorCode_ENQUIP_ROLE_ID_NOT_EXIST       ErrorCode = 20310
	ErrorCode_ENQUIP_ROLE_NOT_UNLOCK         ErrorCode = 20311
	ErrorCode_ENQUIP_ROLE_ALREADY_BE_ENQUIP  ErrorCode = 20312
	ErrorCode_UNENQUIP_POSITION_IS_NULL      ErrorCode = 20313
	ErrorCode_UNENQUIP_COUT_LIMIT            ErrorCode = 20314
	ErrorCode_ATTACK_ENTITY_NOT_EXIST        ErrorCode = 20320
	ErrorCode_ATTACK_ENTITY_NOT_MONSTER      ErrorCode = 20321
	ErrorCode_ATTACK_ENTITY_LACK_GOLD_FAILED ErrorCode = 20322
	ErrorCode_INVALID_REQ_WITH_STORY_MODE    ErrorCode = 20330
	ErrorCode_INVALID_REQ_WITH_NORMAL_MODE   ErrorCode = 20331
)

var ErrorCode_name = map[int32]string{
	0:     "SUCCESS",
	1:     "PARAM_ERROR",
	2:     "NOT_REIGSTER",
	3:     "PLAYER_NOT_EXIST",
	4:     "DESERIALIZE_FAILED",
	5:     "FRESH_USER_MONEY_ERROR",
	6:     "SYSTEM_ERROR",
	10001: "ENTER_ROOM_LOCK_FAILED",
	10002: "ENTER_ROOM_GET_BASE_INFO_FAILED",
	10003: "ENTER_ROOM_READ_GOLD_FAILED",
	10004: "ENTER_ROOM_LACK_GOLD_FAILED",
	10005: "ENTER_ROOM_LOAD_DATA_FAILED",
	20000: "ACCOUNT_REMOTE_LOGIN",
	20100: "START_GAME_STATUS_ERROR",
	20101: "RESTART_GAME_STATUS_ERROR",
	20200: "SET_RATIO_NOT_EXIST",
	20201: "SET_RATIO_LACK_GOLD_FAILED",
	20203: "SET_RATIO_STORY_LOCKED_FAILED",
	20300: "CARD_OPEN_LACK_GOLD_FAILED",
	20301: "CARD_ALREADY_OPENED",
	20302: "CARD_ALREADY_USED",
	20303: "CARD_NOT_ALLOW_USE",
	20310: "ENQUIP_ROLE_ID_NOT_EXIST",
	20311: "ENQUIP_ROLE_NOT_UNLOCK",
	20312: "ENQUIP_ROLE_ALREADY_BE_ENQUIP",
	20313: "UNENQUIP_POSITION_IS_NULL",
	20314: "UNENQUIP_COUT_LIMIT",
	20320: "ATTACK_ENTITY_NOT_EXIST",
	20321: "ATTACK_ENTITY_NOT_MONSTER",
	20322: "ATTACK_ENTITY_LACK_GOLD_FAILED",
	20330: "INVALID_REQ_WITH_STORY_MODE",
	20331: "INVALID_REQ_WITH_NORMAL_MODE",
}
var ErrorCode_value = map[string]int32{
	"SUCCESS":                         0,
	"PARAM_ERROR":                     1,
	"NOT_REIGSTER":                    2,
	"PLAYER_NOT_EXIST":                3,
	"DESERIALIZE_FAILED":              4,
	"FRESH_USER_MONEY_ERROR":          5,
	"SYSTEM_ERROR":                    6,
	"ENTER_ROOM_LOCK_FAILED":          10001,
	"ENTER_ROOM_GET_BASE_INFO_FAILED": 10002,
	"ENTER_ROOM_READ_GOLD_FAILED":     10003,
	"ENTER_ROOM_LACK_GOLD_FAILED":     10004,
	"ENTER_ROOM_LOAD_DATA_FAILED":     10005,
	"ACCOUNT_REMOTE_LOGIN":            20000,
	"START_GAME_STATUS_ERROR":         20100,
	"RESTART_GAME_STATUS_ERROR":       20101,
	"SET_RATIO_NOT_EXIST":             20200,
	"SET_RATIO_LACK_GOLD_FAILED":      20201,
	"SET_RATIO_STORY_LOCKED_FAILED":   20203,
	"CARD_OPEN_LACK_GOLD_FAILED":      20300,
	"CARD_ALREADY_OPENED":             20301,
	"CARD_ALREADY_USED":               20302,
	"CARD_NOT_ALLOW_USE":              20303,
	"ENQUIP_ROLE_ID_NOT_EXIST":        20310,
	"ENQUIP_ROLE_NOT_UNLOCK":          20311,
	"ENQUIP_ROLE_ALREADY_BE_ENQUIP":   20312,
	"UNENQUIP_POSITION_IS_NULL":       20313,
	"UNENQUIP_COUT_LIMIT":             20314,
	"ATTACK_ENTITY_NOT_EXIST":         20320,
	"ATTACK_ENTITY_NOT_MONSTER":       20321,
	"ATTACK_ENTITY_LACK_GOLD_FAILED":  20322,
	"INVALID_REQ_WITH_STORY_MODE":     20330,
	"INVALID_REQ_WITH_NORMAL_MODE":    20331,
}

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}
func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}
func (x *ErrorCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ErrorCode_value, data, "ErrorCode")
	if err != nil {
		return err
	}
	*x = ErrorCode(value)
	return nil
}
func (ErrorCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// 道具类型
type ItemType int32

const (
	ItemType_ITEM_TYPE_NONE    ItemType = 0
	ItemType_ITEM_TYPE_BOX     ItemType = 1
	ItemType_ITEM_TYPE_HERO    ItemType = 2
	ItemType_ITEM_TYPE_MONSTER ItemType = 3
	ItemType_ITME_TYPE_STORY   ItemType = 4
	ItemType_ITME_TYPE_EMPTY   ItemType = 5
)

var ItemType_name = map[int32]string{
	0: "ITEM_TYPE_NONE",
	1: "ITEM_TYPE_BOX",
	2: "ITEM_TYPE_HERO",
	3: "ITEM_TYPE_MONSTER",
	4: "ITME_TYPE_STORY",
	5: "ITME_TYPE_EMPTY",
}
var ItemType_value = map[string]int32{
	"ITEM_TYPE_NONE":    0,
	"ITEM_TYPE_BOX":     1,
	"ITEM_TYPE_HERO":    2,
	"ITEM_TYPE_MONSTER": 3,
	"ITME_TYPE_STORY":   4,
	"ITME_TYPE_EMPTY":   5,
}

func (x ItemType) Enum() *ItemType {
	p := new(ItemType)
	*p = x
	return p
}
func (x ItemType) String() string {
	return proto.EnumName(ItemType_name, int32(x))
}
func (x *ItemType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ItemType_value, data, "ItemType")
	if err != nil {
		return err
	}
	*x = ItemType(value)
	return nil
}
func (ItemType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// 卡牌状态
type CardStatus int32

const (
	CardStatus_CT_NOT_OPENED    CardStatus = 0
	CardStatus_CT_ALREADY_OPEND CardStatus = 1
	CardStatus_CT_IN_USE        CardStatus = 2
	CardStatus_CT_USE_UP        CardStatus = 3
)

var CardStatus_name = map[int32]string{
	0: "CT_NOT_OPENED",
	1: "CT_ALREADY_OPEND",
	2: "CT_IN_USE",
	3: "CT_USE_UP",
}
var CardStatus_value = map[string]int32{
	"CT_NOT_OPENED":    0,
	"CT_ALREADY_OPEND": 1,
	"CT_IN_USE":        2,
	"CT_USE_UP":        3,
}

func (x CardStatus) Enum() *CardStatus {
	p := new(CardStatus)
	*p = x
	return p
}
func (x CardStatus) String() string {
	return proto.EnumName(CardStatus_name, int32(x))
}
func (x *CardStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CardStatus_value, data, "CardStatus")
	if err != nil {
		return err
	}
	*x = CardStatus(value)
	return nil
}
func (CardStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ClownCardType int32

const (
	ClownCardType_CLOWN_CARD_TYPE_EMPTY ClownCardType = 1
	ClownCardType_CLOWN_CARD_TYPE_CLOWN ClownCardType = 2
	ClownCardType_CLOWN_CARD_TYPE_BOX   ClownCardType = 3
)

var ClownCardType_name = map[int32]string{
	1: "CLOWN_CARD_TYPE_EMPTY",
	2: "CLOWN_CARD_TYPE_CLOWN",
	3: "CLOWN_CARD_TYPE_BOX",
}
var ClownCardType_value = map[string]int32{
	"CLOWN_CARD_TYPE_EMPTY": 1,
	"CLOWN_CARD_TYPE_CLOWN": 2,
	"CLOWN_CARD_TYPE_BOX":   3,
}

func (x ClownCardType) Enum() *ClownCardType {
	p := new(ClownCardType)
	*p = x
	return p
}
func (x ClownCardType) String() string {
	return proto.EnumName(ClownCardType_name, int32(x))
}
func (x *ClownCardType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ClownCardType_value, data, "ClownCardType")
	if err != nil {
		return err
	}
	*x = ClownCardType(value)
	return nil
}
func (ClownCardType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

// 登录游戏
type LoginGameReq struct {
	PlayerId         *int64  `protobuf:"varint,1,req,name=PlayerId" json:"PlayerId,omitempty"`
	Token            *string `protobuf:"bytes,2,req,name=Token" json:"Token,omitempty"`
	Version          *string `protobuf:"bytes,3,req,name=Version" json:"Version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LoginGameReq) Reset()                    { *m = LoginGameReq{} }
func (m *LoginGameReq) String() string            { return proto.CompactTextString(m) }
func (*LoginGameReq) ProtoMessage()               {}
func (*LoginGameReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LoginGameReq) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *LoginGameReq) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *LoginGameReq) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

type LoginGameRsp struct {
	Nick             *string `protobuf:"bytes,1,req,name=Nick" json:"Nick,omitempty"`
	Sex              *int32  `protobuf:"varint,2,req,name=Sex" json:"Sex,omitempty"`
	Portrait         *string `protobuf:"bytes,3,req,name=Portrait" json:"Portrait,omitempty"`
	Money            *int64  `protobuf:"varint,4,req,name=Money" json:"Money,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LoginGameRsp) Reset()                    { *m = LoginGameRsp{} }
func (m *LoginGameRsp) String() string            { return proto.CompactTextString(m) }
func (*LoginGameRsp) ProtoMessage()               {}
func (*LoginGameRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LoginGameRsp) GetNick() string {
	if m != nil && m.Nick != nil {
		return *m.Nick
	}
	return ""
}

func (m *LoginGameRsp) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *LoginGameRsp) GetPortrait() string {
	if m != nil && m.Portrait != nil {
		return *m.Portrait
	}
	return ""
}

func (m *LoginGameRsp) GetMoney() int64 {
	if m != nil && m.Money != nil {
		return *m.Money
	}
	return 0
}

// 同步金币
type SyncMoneyRsp struct {
	Type             *uint32 `protobuf:"varint,1,req,name=Type" json:"Type,omitempty"`
	Delta            *uint64 `protobuf:"varint,3,req,name=Delta" json:"Delta,omitempty"`
	Money            *int64  `protobuf:"varint,4,req,name=Money" json:"Money,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SyncMoneyRsp) Reset()                    { *m = SyncMoneyRsp{} }
func (m *SyncMoneyRsp) String() string            { return proto.CompactTextString(m) }
func (*SyncMoneyRsp) ProtoMessage()               {}
func (*SyncMoneyRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SyncMoneyRsp) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *SyncMoneyRsp) GetDelta() uint64 {
	if m != nil && m.Delta != nil {
		return *m.Delta
	}
	return 0
}

func (m *SyncMoneyRsp) GetMoney() int64 {
	if m != nil && m.Money != nil {
		return *m.Money
	}
	return 0
}

// 进入游戏通知
type EnterGameRsp struct {
	HeroList         []uint32 `protobuf:"varint,1,rep,name=HeroList" json:"HeroList,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *EnterGameRsp) Reset()                    { *m = EnterGameRsp{} }
func (m *EnterGameRsp) String() string            { return proto.CompactTextString(m) }
func (*EnterGameRsp) ProtoMessage()               {}
func (*EnterGameRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *EnterGameRsp) GetHeroList() []uint32 {
	if m != nil {
		return m.HeroList
	}
	return nil
}

// 回合初始通知
type GameBeginRsp struct {
	Ratio            *uint32 `protobuf:"varint,1,req,name=Ratio" json:"Ratio,omitempty"`
	LevelID          *uint32 `protobuf:"varint,2,req,name=LevelID" json:"LevelID,omitempty"`
	Money            *int64  `protobuf:"varint,3,req,name=Money" json:"Money,omitempty"`
	KillCount        *uint64 `protobuf:"varint,4,req,name=KillCount" json:"KillCount,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GameBeginRsp) Reset()                    { *m = GameBeginRsp{} }
func (m *GameBeginRsp) String() string            { return proto.CompactTextString(m) }
func (*GameBeginRsp) ProtoMessage()               {}
func (*GameBeginRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GameBeginRsp) GetRatio() uint32 {
	if m != nil && m.Ratio != nil {
		return *m.Ratio
	}
	return 0
}

func (m *GameBeginRsp) GetLevelID() uint32 {
	if m != nil && m.LevelID != nil {
		return *m.LevelID
	}
	return 0
}

func (m *GameBeginRsp) GetMoney() int64 {
	if m != nil && m.Money != nil {
		return *m.Money
	}
	return 0
}

func (m *GameBeginRsp) GetKillCount() uint64 {
	if m != nil && m.KillCount != nil {
		return *m.KillCount
	}
	return 0
}

// 回合结束通知
type GameEndRsp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GameEndRsp) Reset()                    { *m = GameEndRsp{} }
func (m *GameEndRsp) String() string            { return proto.CompactTextString(m) }
func (*GameEndRsp) ProtoMessage()               {}
func (*GameEndRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

// 解锁英雄通知
type UnlockHerosRsp struct {
	KillCount        *uint64  `protobuf:"varint,1,req,name=KillCount" json:"KillCount,omitempty"`
	UnlockHeros      []uint32 `protobuf:"varint,2,rep,name=UnlockHeros" json:"UnlockHeros,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *UnlockHerosRsp) Reset()                    { *m = UnlockHerosRsp{} }
func (m *UnlockHerosRsp) String() string            { return proto.CompactTextString(m) }
func (*UnlockHerosRsp) ProtoMessage()               {}
func (*UnlockHerosRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UnlockHerosRsp) GetKillCount() uint64 {
	if m != nil && m.KillCount != nil {
		return *m.KillCount
	}
	return 0
}

func (m *UnlockHerosRsp) GetUnlockHeros() []uint32 {
	if m != nil {
		return m.UnlockHeros
	}
	return nil
}

// 设置倍率请求
type SetRatioReq struct {
	Ratio            *uint32 `protobuf:"varint,1,req,name=Ratio" json:"Ratio,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SetRatioReq) Reset()                    { *m = SetRatioReq{} }
func (m *SetRatioReq) String() string            { return proto.CompactTextString(m) }
func (*SetRatioReq) ProtoMessage()               {}
func (*SetRatioReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *SetRatioReq) GetRatio() uint32 {
	if m != nil && m.Ratio != nil {
		return *m.Ratio
	}
	return 0
}

// 设置倍率回应
type SetRatioRsp struct {
	Ratio            *uint32 `protobuf:"varint,1,req,name=Ratio" json:"Ratio,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SetRatioRsp) Reset()                    { *m = SetRatioRsp{} }
func (m *SetRatioRsp) String() string            { return proto.CompactTextString(m) }
func (*SetRatioRsp) ProtoMessage()               {}
func (*SetRatioRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *SetRatioRsp) GetRatio() uint32 {
	if m != nil && m.Ratio != nil {
		return *m.Ratio
	}
	return 0
}

type BetExtraInfo struct {
	BetType  *uint32 `protobuf:"varint,1,req,name=BetType" json:"BetType,omitempty"`
	BetIndex *uint32 `protobuf:"varint,2,req,name=BetIndex" json:"BetIndex,omitempty"`
	// 下注类型2时需要传递的数据
	AttackerID       *uint32 `protobuf:"varint,5,opt,name=AttackerID" json:"AttackerID,omitempty"`
	BeAttackerID     *uint32 `protobuf:"varint,6,opt,name=BeAttackerID" json:"BeAttackerID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BetExtraInfo) Reset()                    { *m = BetExtraInfo{} }
func (m *BetExtraInfo) String() string            { return proto.CompactTextString(m) }
func (*BetExtraInfo) ProtoMessage()               {}
func (*BetExtraInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *BetExtraInfo) GetBetType() uint32 {
	if m != nil && m.BetType != nil {
		return *m.BetType
	}
	return 0
}

func (m *BetExtraInfo) GetBetIndex() uint32 {
	if m != nil && m.BetIndex != nil {
		return *m.BetIndex
	}
	return 0
}

func (m *BetExtraInfo) GetAttackerID() uint32 {
	if m != nil && m.AttackerID != nil {
		return *m.AttackerID
	}
	return 0
}

func (m *BetExtraInfo) GetBeAttackerID() uint32 {
	if m != nil && m.BeAttackerID != nil {
		return *m.BeAttackerID
	}
	return 0
}

// 下注回应
type BetRsp struct {
	Ratio            *uint32       `protobuf:"varint,1,req,name=Ratio" json:"Ratio,omitempty"`
	Consume          *uint64       `protobuf:"varint,2,req,name=Consume" json:"Consume,omitempty"`
	Delta            *uint64       `protobuf:"varint,3,req,name=Delta" json:"Delta,omitempty"`
	Money            *int64        `protobuf:"varint,4,req,name=Money" json:"Money,omitempty"`
	Info             *BetExtraInfo `protobuf:"bytes,6,opt,name=Info" json:"Info,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *BetRsp) Reset()                    { *m = BetRsp{} }
func (m *BetRsp) String() string            { return proto.CompactTextString(m) }
func (*BetRsp) ProtoMessage()               {}
func (*BetRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *BetRsp) GetRatio() uint32 {
	if m != nil && m.Ratio != nil {
		return *m.Ratio
	}
	return 0
}

func (m *BetRsp) GetConsume() uint64 {
	if m != nil && m.Consume != nil {
		return *m.Consume
	}
	return 0
}

func (m *BetRsp) GetDelta() uint64 {
	if m != nil && m.Delta != nil {
		return *m.Delta
	}
	return 0
}

func (m *BetRsp) GetMoney() int64 {
	if m != nil && m.Money != nil {
		return *m.Money
	}
	return 0
}

func (m *BetRsp) GetInfo() *BetExtraInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

// 无效分消耗回应(通知客户端加钱)
type InvalidScoreRsp struct {
	Money            *uint64 `protobuf:"varint,1,req,name=Money" json:"Money,omitempty"`
	Consume          *uint64 `protobuf:"varint,2,req,name=Consume" json:"Consume,omitempty"`
	Desc             *string `protobuf:"bytes,3,req,name=Desc" json:"Desc,omitempty"`
	Index            *int32  `protobuf:"varint,4,req,name=Index" json:"Index,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *InvalidScoreRsp) Reset()                    { *m = InvalidScoreRsp{} }
func (m *InvalidScoreRsp) String() string            { return proto.CompactTextString(m) }
func (*InvalidScoreRsp) ProtoMessage()               {}
func (*InvalidScoreRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *InvalidScoreRsp) GetMoney() uint64 {
	if m != nil && m.Money != nil {
		return *m.Money
	}
	return 0
}

func (m *InvalidScoreRsp) GetConsume() uint64 {
	if m != nil && m.Consume != nil {
		return *m.Consume
	}
	return 0
}

func (m *InvalidScoreRsp) GetDesc() string {
	if m != nil && m.Desc != nil {
		return *m.Desc
	}
	return ""
}

func (m *InvalidScoreRsp) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

// 卡牌
type Card struct {
	Index            *uint32     `protobuf:"varint,1,req,name=Index" json:"Index,omitempty"`
	ItemTypeID       *uint32     `protobuf:"varint,2,req,name=ItemTypeID" json:"ItemTypeID,omitempty"`
	ItemID           *uint32     `protobuf:"varint,3,req,name=ItemID" json:"ItemID,omitempty"`
	Status           *CardStatus `protobuf:"varint,4,req,name=Status,enum=Game.CardStatus" json:"Status,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *Card) Reset()                    { *m = Card{} }
func (m *Card) String() string            { return proto.CompactTextString(m) }
func (*Card) ProtoMessage()               {}
func (*Card) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *Card) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *Card) GetItemTypeID() uint32 {
	if m != nil && m.ItemTypeID != nil {
		return *m.ItemTypeID
	}
	return 0
}

func (m *Card) GetItemID() uint32 {
	if m != nil && m.ItemID != nil {
		return *m.ItemID
	}
	return 0
}

func (m *Card) GetStatus() CardStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return CardStatus_CT_NOT_OPENED
}

// 翻开卡牌回应
type OpenOneCardReq struct {
	CardIndex        *uint32 `protobuf:"varint,1,req,name=CardIndex" json:"CardIndex,omitempty"`
	Times            *uint32 `protobuf:"varint,3,req,name=Times" json:"Times,omitempty"`
	Ratio            *uint32 `protobuf:"varint,4,req,name=Ratio" json:"Ratio,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *OpenOneCardReq) Reset()                    { *m = OpenOneCardReq{} }
func (m *OpenOneCardReq) String() string            { return proto.CompactTextString(m) }
func (*OpenOneCardReq) ProtoMessage()               {}
func (*OpenOneCardReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *OpenOneCardReq) GetCardIndex() uint32 {
	if m != nil && m.CardIndex != nil {
		return *m.CardIndex
	}
	return 0
}

func (m *OpenOneCardReq) GetTimes() uint32 {
	if m != nil && m.Times != nil {
		return *m.Times
	}
	return 0
}

func (m *OpenOneCardReq) GetRatio() uint32 {
	if m != nil && m.Ratio != nil {
		return *m.Ratio
	}
	return 0
}

// 使用一张已翻开的卡牌
type UseOneCardReq struct {
	CardIndex        *uint32 `protobuf:"varint,1,req,name=CardIndex" json:"CardIndex,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UseOneCardReq) Reset()                    { *m = UseOneCardReq{} }
func (m *UseOneCardReq) String() string            { return proto.CompactTextString(m) }
func (*UseOneCardReq) ProtoMessage()               {}
func (*UseOneCardReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *UseOneCardReq) GetCardIndex() uint32 {
	if m != nil && m.CardIndex != nil {
		return *m.CardIndex
	}
	return 0
}

// 同步初始所有卡牌信息
type SyncInitCardRsp struct {
	CardList         []*Card `protobuf:"bytes,1,rep,name=CardList" json:"CardList,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SyncInitCardRsp) Reset()                    { *m = SyncInitCardRsp{} }
func (m *SyncInitCardRsp) String() string            { return proto.CompactTextString(m) }
func (*SyncInitCardRsp) ProtoMessage()               {}
func (*SyncInitCardRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *SyncInitCardRsp) GetCardList() []*Card {
	if m != nil {
		return m.CardList
	}
	return nil
}

// 同步卡牌信息
type SyncCardRsp struct {
	CardData         *Card  `protobuf:"bytes,1,req,name=CardData" json:"CardData,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SyncCardRsp) Reset()                    { *m = SyncCardRsp{} }
func (m *SyncCardRsp) String() string            { return proto.CompactTextString(m) }
func (*SyncCardRsp) ProtoMessage()               {}
func (*SyncCardRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *SyncCardRsp) GetCardData() *Card {
	if m != nil {
		return m.CardData
	}
	return nil
}

// 游戏战斗实体
type EntityInfo struct {
	ID               *uint32 `protobuf:"varint,1,req,name=ID" json:"ID,omitempty"`
	RoleID           *uint32 `protobuf:"varint,2,req,name=RoleID" json:"RoleID,omitempty"`
	Type             *uint32 `protobuf:"varint,3,req,name=Type" json:"Type,omitempty"`
	Index            *uint32 `protobuf:"varint,4,req,name=Index" json:"Index,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *EntityInfo) Reset()                    { *m = EntityInfo{} }
func (m *EntityInfo) String() string            { return proto.CompactTextString(m) }
func (*EntityInfo) ProtoMessage()               {}
func (*EntityInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *EntityInfo) GetID() uint32 {
	if m != nil && m.ID != nil {
		return *m.ID
	}
	return 0
}

func (m *EntityInfo) GetRoleID() uint32 {
	if m != nil && m.RoleID != nil {
		return *m.RoleID
	}
	return 0
}

func (m *EntityInfo) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *EntityInfo) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

// 上阵英雄
type EquipHeroReq struct {
	Position         *uint32 `protobuf:"varint,1,req,name=Position" json:"Position,omitempty"`
	RoleID           *uint32 `protobuf:"varint,2,req,name=RoleID" json:"RoleID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *EquipHeroReq) Reset()                    { *m = EquipHeroReq{} }
func (m *EquipHeroReq) String() string            { return proto.CompactTextString(m) }
func (*EquipHeroReq) ProtoMessage()               {}
func (*EquipHeroReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *EquipHeroReq) GetPosition() uint32 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

func (m *EquipHeroReq) GetRoleID() uint32 {
	if m != nil && m.RoleID != nil {
		return *m.RoleID
	}
	return 0
}

// 下阵英雄
type UnEquipHeroReq struct {
	Position         *uint32 `protobuf:"varint,1,req,name=Position" json:"Position,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UnEquipHeroReq) Reset()                    { *m = UnEquipHeroReq{} }
func (m *UnEquipHeroReq) String() string            { return proto.CompactTextString(m) }
func (*UnEquipHeroReq) ProtoMessage()               {}
func (*UnEquipHeroReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *UnEquipHeroReq) GetPosition() uint32 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

// 方位
type PositionInfo struct {
	Position         *uint32 `protobuf:"varint,1,req,name=Position" json:"Position,omitempty"`
	RoleID           *uint32 `protobuf:"varint,2,req,name=RoleID" json:"RoleID,omitempty"`
	EntityID         *uint32 `protobuf:"varint,3,req,name=EntityID" json:"EntityID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PositionInfo) Reset()                    { *m = PositionInfo{} }
func (m *PositionInfo) String() string            { return proto.CompactTextString(m) }
func (*PositionInfo) ProtoMessage()               {}
func (*PositionInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *PositionInfo) GetPosition() uint32 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

func (m *PositionInfo) GetRoleID() uint32 {
	if m != nil && m.RoleID != nil {
		return *m.RoleID
	}
	return 0
}

func (m *PositionInfo) GetEntityID() uint32 {
	if m != nil && m.EntityID != nil {
		return *m.EntityID
	}
	return 0
}

// 同步初始阵容信息
type SyncInitPositionRsp struct {
	PositionList     []*PositionInfo `protobuf:"bytes,6,rep,name=PositionList" json:"PositionList,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *SyncInitPositionRsp) Reset()                    { *m = SyncInitPositionRsp{} }
func (m *SyncInitPositionRsp) String() string            { return proto.CompactTextString(m) }
func (*SyncInitPositionRsp) ProtoMessage()               {}
func (*SyncInitPositionRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *SyncInitPositionRsp) GetPositionList() []*PositionInfo {
	if m != nil {
		return m.PositionList
	}
	return nil
}

// 同步阵容信息
type SyncAllPositionRsp struct {
	PositionList     []*PositionInfo `protobuf:"bytes,6,rep,name=PositionList" json:"PositionList,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *SyncAllPositionRsp) Reset()                    { *m = SyncAllPositionRsp{} }
func (m *SyncAllPositionRsp) String() string            { return proto.CompactTextString(m) }
func (*SyncAllPositionRsp) ProtoMessage()               {}
func (*SyncAllPositionRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *SyncAllPositionRsp) GetPositionList() []*PositionInfo {
	if m != nil {
		return m.PositionList
	}
	return nil
}

// 交换阵容请求
type ChangePositionReq struct {
	SourcePosition   *uint32 `protobuf:"varint,1,req,name=SourcePosition" json:"SourcePosition,omitempty"`
	TargetPosition   *uint32 `protobuf:"varint,2,req,name=TargetPosition" json:"TargetPosition,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChangePositionReq) Reset()                    { *m = ChangePositionReq{} }
func (m *ChangePositionReq) String() string            { return proto.CompactTextString(m) }
func (*ChangePositionReq) ProtoMessage()               {}
func (*ChangePositionReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *ChangePositionReq) GetSourcePosition() uint32 {
	if m != nil && m.SourcePosition != nil {
		return *m.SourcePosition
	}
	return 0
}

func (m *ChangePositionReq) GetTargetPosition() uint32 {
	if m != nil && m.TargetPosition != nil {
		return *m.TargetPosition
	}
	return 0
}

// 交换阵容回应
type ChangePositionRsp struct {
	SourcePosition   *uint32 `protobuf:"varint,1,req,name=SourcePosition" json:"SourcePosition,omitempty"`
	SourceEntityID   *uint32 `protobuf:"varint,2,req,name=SourceEntityID" json:"SourceEntityID,omitempty"`
	TargetPosition   *uint32 `protobuf:"varint,3,req,name=TargetPosition" json:"TargetPosition,omitempty"`
	TargetEntityID   *uint32 `protobuf:"varint,4,req,name=TargetEntityID" json:"TargetEntityID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChangePositionRsp) Reset()                    { *m = ChangePositionRsp{} }
func (m *ChangePositionRsp) String() string            { return proto.CompactTextString(m) }
func (*ChangePositionRsp) ProtoMessage()               {}
func (*ChangePositionRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *ChangePositionRsp) GetSourcePosition() uint32 {
	if m != nil && m.SourcePosition != nil {
		return *m.SourcePosition
	}
	return 0
}

func (m *ChangePositionRsp) GetSourceEntityID() uint32 {
	if m != nil && m.SourceEntityID != nil {
		return *m.SourceEntityID
	}
	return 0
}

func (m *ChangePositionRsp) GetTargetPosition() uint32 {
	if m != nil && m.TargetPosition != nil {
		return *m.TargetPosition
	}
	return 0
}

func (m *ChangePositionRsp) GetTargetEntityID() uint32 {
	if m != nil && m.TargetEntityID != nil {
		return *m.TargetEntityID
	}
	return 0
}

// 同步初始实体列表
type SyncInitEntityRsp struct {
	EntityList       []*EntityInfo `protobuf:"bytes,1,rep,name=EntityList" json:"EntityList,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *SyncInitEntityRsp) Reset()                    { *m = SyncInitEntityRsp{} }
func (m *SyncInitEntityRsp) String() string            { return proto.CompactTextString(m) }
func (*SyncInitEntityRsp) ProtoMessage()               {}
func (*SyncInitEntityRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *SyncInitEntityRsp) GetEntityList() []*EntityInfo {
	if m != nil {
		return m.EntityList
	}
	return nil
}

// 游戏实体生成回应
type EntitySpawnRsp struct {
	Entity           *EntityInfo `protobuf:"bytes,1,req,name=Entity" json:"Entity,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *EntitySpawnRsp) Reset()                    { *m = EntitySpawnRsp{} }
func (m *EntitySpawnRsp) String() string            { return proto.CompactTextString(m) }
func (*EntitySpawnRsp) ProtoMessage()               {}
func (*EntitySpawnRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *EntitySpawnRsp) GetEntity() *EntityInfo {
	if m != nil {
		return m.Entity
	}
	return nil
}

// 游戏实体死亡数据回应
type EntityDeathRsp struct {
	EntityID         *uint32 `protobuf:"varint,1,req,name=EntityID" json:"EntityID,omitempty"`
	Normal           *bool   `protobuf:"varint,2,req,name=Normal" json:"Normal,omitempty"`
	KillCount        *uint64 `protobuf:"varint,3,req,name=KillCount" json:"KillCount,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *EntityDeathRsp) Reset()                    { *m = EntityDeathRsp{} }
func (m *EntityDeathRsp) String() string            { return proto.CompactTextString(m) }
func (*EntityDeathRsp) ProtoMessage()               {}
func (*EntityDeathRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *EntityDeathRsp) GetEntityID() uint32 {
	if m != nil && m.EntityID != nil {
		return *m.EntityID
	}
	return 0
}

func (m *EntityDeathRsp) GetNormal() bool {
	if m != nil && m.Normal != nil {
		return *m.Normal
	}
	return false
}

func (m *EntityDeathRsp) GetKillCount() uint64 {
	if m != nil && m.KillCount != nil {
		return *m.KillCount
	}
	return 0
}

// 攻击实体请求
type AttackEntityReq struct {
	AttackerID       *uint32 `protobuf:"varint,1,req,name=AttackerID" json:"AttackerID,omitempty"`
	BeAttackerID     *uint32 `protobuf:"varint,2,req,name=BeAttackerID" json:"BeAttackerID,omitempty"`
	Times            *uint32 `protobuf:"varint,3,req,name=Times" json:"Times,omitempty"`
	Ratio            *uint32 `protobuf:"varint,4,req,name=Ratio" json:"Ratio,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AttackEntityReq) Reset()                    { *m = AttackEntityReq{} }
func (m *AttackEntityReq) String() string            { return proto.CompactTextString(m) }
func (*AttackEntityReq) ProtoMessage()               {}
func (*AttackEntityReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *AttackEntityReq) GetAttackerID() uint32 {
	if m != nil && m.AttackerID != nil {
		return *m.AttackerID
	}
	return 0
}

func (m *AttackEntityReq) GetBeAttackerID() uint32 {
	if m != nil && m.BeAttackerID != nil {
		return *m.BeAttackerID
	}
	return 0
}

func (m *AttackEntityReq) GetTimes() uint32 {
	if m != nil && m.Times != nil {
		return *m.Times
	}
	return 0
}

func (m *AttackEntityReq) GetRatio() uint32 {
	if m != nil && m.Ratio != nil {
		return *m.Ratio
	}
	return 0
}

// 直接杀死实体请求
type KillEntityReq struct {
	EntityID         *uint32 `protobuf:"varint,1,req,name=EntityID" json:"EntityID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *KillEntityReq) Reset()                    { *m = KillEntityReq{} }
func (m *KillEntityReq) String() string            { return proto.CompactTextString(m) }
func (*KillEntityReq) ProtoMessage()               {}
func (*KillEntityReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *KillEntityReq) GetEntityID() uint32 {
	if m != nil && m.EntityID != nil {
		return *m.EntityID
	}
	return 0
}

// 同步剧情数据
type SyncStoryData struct {
	Money            *int64  `protobuf:"varint,1,req,name=Money" json:"Money,omitempty"`
	StoryID          *uint32 `protobuf:"varint,3,req,name=StoryID" json:"StoryID,omitempty"`
	Data             []byte  `protobuf:"bytes,5,opt,name=Data" json:"Data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SyncStoryData) Reset()                    { *m = SyncStoryData{} }
func (m *SyncStoryData) String() string            { return proto.CompactTextString(m) }
func (*SyncStoryData) ProtoMessage()               {}
func (*SyncStoryData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *SyncStoryData) GetMoney() int64 {
	if m != nil && m.Money != nil {
		return *m.Money
	}
	return 0
}

func (m *SyncStoryData) GetStoryID() uint32 {
	if m != nil && m.StoryID != nil {
		return *m.StoryID
	}
	return 0
}

func (m *SyncStoryData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// 过敏源剧情data
type AllergenData struct {
	Status           *bool   `protobuf:"varint,1,req,name=Status" json:"Status,omitempty"`
	Index            *uint32 `protobuf:"varint,2,req,name=Index" json:"Index,omitempty"`
	LockRatio        *uint32 `protobuf:"varint,3,req,name=LockRatio" json:"LockRatio,omitempty"`
	TotalRward       *uint64 `protobuf:"varint,4,opt,name=TotalRward" json:"TotalRward,omitempty"`
	AttackResult     []bool  `protobuf:"varint,5,rep,name=AttackResult" json:"AttackResult,omitempty"`
	AttackStatus     []bool  `protobuf:"varint,6,rep,name=AttackStatus" json:"AttackStatus,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AllergenData) Reset()                    { *m = AllergenData{} }
func (m *AllergenData) String() string            { return proto.CompactTextString(m) }
func (*AllergenData) ProtoMessage()               {}
func (*AllergenData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *AllergenData) GetStatus() bool {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return false
}

func (m *AllergenData) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *AllergenData) GetLockRatio() uint32 {
	if m != nil && m.LockRatio != nil {
		return *m.LockRatio
	}
	return 0
}

func (m *AllergenData) GetTotalRward() uint64 {
	if m != nil && m.TotalRward != nil {
		return *m.TotalRward
	}
	return 0
}

func (m *AllergenData) GetAttackResult() []bool {
	if m != nil {
		return m.AttackResult
	}
	return nil
}

func (m *AllergenData) GetAttackStatus() []bool {
	if m != nil {
		return m.AttackStatus
	}
	return nil
}

// 过敏源剧情攻击请求
type AllergenAttackReq struct {
	Index            *uint32 `protobuf:"varint,1,req,name=Index" json:"Index,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AllergenAttackReq) Reset()                    { *m = AllergenAttackReq{} }
func (m *AllergenAttackReq) String() string            { return proto.CompactTextString(m) }
func (*AllergenAttackReq) ProtoMessage()               {}
func (*AllergenAttackReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *AllergenAttackReq) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

// 过敏源剧情攻击回应
type AllergenAttackRsp struct {
	Index            *uint32 `protobuf:"varint,1,req,name=Index" json:"Index,omitempty"`
	Delta            *uint64 `protobuf:"varint,2,req,name=Delta" json:"Delta,omitempty"`
	FirstReward      *uint64 `protobuf:"varint,3,req,name=FirstReward" json:"FirstReward,omitempty"`
	SingleReward     *uint64 `protobuf:"varint,4,req,name=SingleReward" json:"SingleReward,omitempty"`
	ComboReward      *uint64 `protobuf:"varint,5,req,name=ComboReward" json:"ComboReward,omitempty"`
	ComboCount       *uint64 `protobuf:"varint,6,req,name=ComboCount" json:"ComboCount,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AllergenAttackRsp) Reset()                    { *m = AllergenAttackRsp{} }
func (m *AllergenAttackRsp) String() string            { return proto.CompactTextString(m) }
func (*AllergenAttackRsp) ProtoMessage()               {}
func (*AllergenAttackRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *AllergenAttackRsp) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *AllergenAttackRsp) GetDelta() uint64 {
	if m != nil && m.Delta != nil {
		return *m.Delta
	}
	return 0
}

func (m *AllergenAttackRsp) GetFirstReward() uint64 {
	if m != nil && m.FirstReward != nil {
		return *m.FirstReward
	}
	return 0
}

func (m *AllergenAttackRsp) GetSingleReward() uint64 {
	if m != nil && m.SingleReward != nil {
		return *m.SingleReward
	}
	return 0
}

func (m *AllergenAttackRsp) GetComboReward() uint64 {
	if m != nil && m.ComboReward != nil {
		return *m.ComboReward
	}
	return 0
}

func (m *AllergenAttackRsp) GetComboCount() uint64 {
	if m != nil && m.ComboCount != nil {
		return *m.ComboCount
	}
	return 0
}

// 过敏源剧情结算
type AllergenSettleRsp struct {
	Money            *int64  `protobuf:"varint,1,req,name=Money" json:"Money,omitempty"`
	Delta            *uint64 `protobuf:"varint,2,req,name=Delta" json:"Delta,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AllergenSettleRsp) Reset()                    { *m = AllergenSettleRsp{} }
func (m *AllergenSettleRsp) String() string            { return proto.CompactTextString(m) }
func (*AllergenSettleRsp) ProtoMessage()               {}
func (*AllergenSettleRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *AllergenSettleRsp) GetMoney() int64 {
	if m != nil && m.Money != nil {
		return *m.Money
	}
	return 0
}

func (m *AllergenSettleRsp) GetDelta() uint64 {
	if m != nil && m.Delta != nil {
		return *m.Delta
	}
	return 0
}

// 清理结算标志
type ResetAllergenSettleFlagReq struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ResetAllergenSettleFlagReq) Reset()                    { *m = ResetAllergenSettleFlagReq{} }
func (m *ResetAllergenSettleFlagReq) String() string            { return proto.CompactTextString(m) }
func (*ResetAllergenSettleFlagReq) ProtoMessage()               {}
func (*ResetAllergenSettleFlagReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

type ClownCard struct {
	Index            *uint32 `protobuf:"varint,1,req,name=Index" json:"Index,omitempty"`
	Type             *uint32 `protobuf:"varint,2,req,name=Type" json:"Type,omitempty"`
	Delta            *uint64 `protobuf:"varint,3,req,name=Delta" json:"Delta,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ClownCard) Reset()                    { *m = ClownCard{} }
func (m *ClownCard) String() string            { return proto.CompactTextString(m) }
func (*ClownCard) ProtoMessage()               {}
func (*ClownCard) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *ClownCard) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *ClownCard) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *ClownCard) GetDelta() uint64 {
	if m != nil && m.Delta != nil {
		return *m.Delta
	}
	return 0
}

type ClownData struct {
	Status           *bool   `protobuf:"varint,1,req,name=Status" json:"Status,omitempty"`
	Round            *uint32 `protobuf:"varint,2,req,name=Round" json:"Round,omitempty"`
	MaxRound         *uint32 `protobuf:"varint,3,req,name=MaxRound" json:"MaxRound,omitempty"`
	FreeTimes        *uint32 `protobuf:"varint,4,req,name=FreeTimes" json:"FreeTimes,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ClownData) Reset()                    { *m = ClownData{} }
func (m *ClownData) String() string            { return proto.CompactTextString(m) }
func (*ClownData) ProtoMessage()               {}
func (*ClownData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *ClownData) GetStatus() bool {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return false
}

func (m *ClownData) GetRound() uint32 {
	if m != nil && m.Round != nil {
		return *m.Round
	}
	return 0
}

func (m *ClownData) GetMaxRound() uint32 {
	if m != nil && m.MaxRound != nil {
		return *m.MaxRound
	}
	return 0
}

func (m *ClownData) GetFreeTimes() uint32 {
	if m != nil && m.FreeTimes != nil {
		return *m.FreeTimes
	}
	return 0
}

// 请求翻牌
type ClownOpenAllCardReq struct {
	Round            *uint32 `protobuf:"varint,1,req,name=Round" json:"Round,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ClownOpenAllCardReq) Reset()                    { *m = ClownOpenAllCardReq{} }
func (m *ClownOpenAllCardReq) String() string            { return proto.CompactTextString(m) }
func (*ClownOpenAllCardReq) ProtoMessage()               {}
func (*ClownOpenAllCardReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *ClownOpenAllCardReq) GetRound() uint32 {
	if m != nil && m.Round != nil {
		return *m.Round
	}
	return 0
}

// 翻牌回应
type ClownOpenAllCardRsp struct {
	Round            *uint32      `protobuf:"varint,1,req,name=Round" json:"Round,omitempty"`
	Result           *uint32      `protobuf:"varint,2,req,name=Result" json:"Result,omitempty"`
	CardList         []*ClownCard `protobuf:"bytes,3,rep,name=CardList" json:"CardList,omitempty"`
	FreeTimes        *uint32      `protobuf:"varint,4,req,name=FreeTimes" json:"FreeTimes,omitempty"`
	IsEnd            *bool        `protobuf:"varint,5,req,name=IsEnd" json:"IsEnd,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ClownOpenAllCardRsp) Reset()                    { *m = ClownOpenAllCardRsp{} }
func (m *ClownOpenAllCardRsp) String() string            { return proto.CompactTextString(m) }
func (*ClownOpenAllCardRsp) ProtoMessage()               {}
func (*ClownOpenAllCardRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *ClownOpenAllCardRsp) GetRound() uint32 {
	if m != nil && m.Round != nil {
		return *m.Round
	}
	return 0
}

func (m *ClownOpenAllCardRsp) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *ClownOpenAllCardRsp) GetCardList() []*ClownCard {
	if m != nil {
		return m.CardList
	}
	return nil
}

func (m *ClownOpenAllCardRsp) GetFreeTimes() uint32 {
	if m != nil && m.FreeTimes != nil {
		return *m.FreeTimes
	}
	return 0
}

func (m *ClownOpenAllCardRsp) GetIsEnd() bool {
	if m != nil && m.IsEnd != nil {
		return *m.IsEnd
	}
	return false
}

// 剧情结算
type ClownSettleRsp struct {
	Money            *int64  `protobuf:"varint,1,req,name=Money" json:"Money,omitempty"`
	Delta            *uint64 `protobuf:"varint,2,req,name=Delta" json:"Delta,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ClownSettleRsp) Reset()                    { *m = ClownSettleRsp{} }
func (m *ClownSettleRsp) String() string            { return proto.CompactTextString(m) }
func (*ClownSettleRsp) ProtoMessage()               {}
func (*ClownSettleRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *ClownSettleRsp) GetMoney() int64 {
	if m != nil && m.Money != nil {
		return *m.Money
	}
	return 0
}

func (m *ClownSettleRsp) GetDelta() uint64 {
	if m != nil && m.Delta != nil {
		return *m.Delta
	}
	return 0
}

// 清理结算标志
type ResetClownSettleFlagReq struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ResetClownSettleFlagReq) Reset()                    { *m = ResetClownSettleFlagReq{} }
func (m *ResetClownSettleFlagReq) String() string            { return proto.CompactTextString(m) }
func (*ResetClownSettleFlagReq) ProtoMessage()               {}
func (*ResetClownSettleFlagReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

// 消息协议
type Message struct {
	// 玩家ID
	PlayerId *int64 `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	// 操作码
	Ops *int32 `protobuf:"varint,2,req,name=Ops" json:"Ops,omitempty"`
	// 数据
	Data             []byte `protobuf:"bytes,3,opt,name=Data" json:"Data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *Message) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *Message) GetOps() int32 {
	if m != nil && m.Ops != nil {
		return *m.Ops
	}
	return 0
}

func (m *Message) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Http响应结果篡改
type HttpResult struct {
	En               *int32 `protobuf:"varint,1,req,name=En" json:"En,omitempty"`
	Data             []byte `protobuf:"bytes,2,opt,name=Data" json:"Data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *HttpResult) Reset()                    { *m = HttpResult{} }
func (m *HttpResult) String() string            { return proto.CompactTextString(m) }
func (*HttpResult) ProtoMessage()               {}
func (*HttpResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *HttpResult) GetEn() int32 {
	if m != nil && m.En != nil {
		return *m.En
	}
	return 0
}

func (m *HttpResult) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// 请求分配游戏服务器
type AllocServer struct {
	GameId           *int32 `protobuf:"varint,1,req,name=GameId" json:"GameId,omitempty"`
	GroupId          *int32 `protobuf:"varint,2,req,name=GroupId" json:"GroupId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AllocServer) Reset()                    { *m = AllocServer{} }
func (m *AllocServer) String() string            { return proto.CompactTextString(m) }
func (*AllocServer) ProtoMessage()               {}
func (*AllocServer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *AllocServer) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *AllocServer) GetGroupId() int32 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

// 请求分配游戏服务器返回
type AllocServerAddressResp struct {
	Address          *string `protobuf:"bytes,1,req,name=Address" json:"Address,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AllocServerAddressResp) Reset()                    { *m = AllocServerAddressResp{} }
func (m *AllocServerAddressResp) String() string            { return proto.CompactTextString(m) }
func (*AllocServerAddressResp) ProtoMessage()               {}
func (*AllocServerAddressResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *AllocServerAddressResp) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

// 微信登录
type QPPartnerUserLoginReq struct {
	GameID           *int32  `protobuf:"varint,1,req,name=GameID" json:"GameID,omitempty"`
	PartnerID        *int32  `protobuf:"varint,2,req,name=PartnerID" json:"PartnerID,omitempty"`
	MarkerID         *int32  `protobuf:"varint,3,req,name=MarkerID" json:"MarkerID,omitempty"`
	Version          *string `protobuf:"bytes,4,req,name=Version" json:"Version,omitempty"`
	UnionID          *string `protobuf:"bytes,5,req,name=UnionID" json:"UnionID,omitempty"`
	NickName         *string `protobuf:"bytes,6,req,name=NickName" json:"NickName,omitempty"`
	HeadimgUrl       *string `protobuf:"bytes,7,req,name=HeadimgUrl" json:"HeadimgUrl,omitempty"`
	Sex              *int32  `protobuf:"varint,8,req,name=Sex" json:"Sex,omitempty"`
	Json             *bool   `protobuf:"varint,9,opt,name=Json,def=0" json:"Json,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *QPPartnerUserLoginReq) Reset()                    { *m = QPPartnerUserLoginReq{} }
func (m *QPPartnerUserLoginReq) String() string            { return proto.CompactTextString(m) }
func (*QPPartnerUserLoginReq) ProtoMessage()               {}
func (*QPPartnerUserLoginReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

const Default_QPPartnerUserLoginReq_Json bool = false

func (m *QPPartnerUserLoginReq) GetGameID() int32 {
	if m != nil && m.GameID != nil {
		return *m.GameID
	}
	return 0
}

func (m *QPPartnerUserLoginReq) GetPartnerID() int32 {
	if m != nil && m.PartnerID != nil {
		return *m.PartnerID
	}
	return 0
}

func (m *QPPartnerUserLoginReq) GetMarkerID() int32 {
	if m != nil && m.MarkerID != nil {
		return *m.MarkerID
	}
	return 0
}

func (m *QPPartnerUserLoginReq) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *QPPartnerUserLoginReq) GetUnionID() string {
	if m != nil && m.UnionID != nil {
		return *m.UnionID
	}
	return ""
}

func (m *QPPartnerUserLoginReq) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *QPPartnerUserLoginReq) GetHeadimgUrl() string {
	if m != nil && m.HeadimgUrl != nil {
		return *m.HeadimgUrl
	}
	return ""
}

func (m *QPPartnerUserLoginReq) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *QPPartnerUserLoginReq) GetJson() bool {
	if m != nil && m.Json != nil {
		return *m.Json
	}
	return Default_QPPartnerUserLoginReq_Json
}

// 获取微信配置
type WechatSignReq struct {
	Url              *string `protobuf:"bytes,1,req,name=url" json:"url,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *WechatSignReq) Reset()                    { *m = WechatSignReq{} }
func (m *WechatSignReq) String() string            { return proto.CompactTextString(m) }
func (*WechatSignReq) ProtoMessage()               {}
func (*WechatSignReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *WechatSignReq) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

// 发送心跳到服务器
type PingGameReq struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *PingGameReq) Reset()                    { *m = PingGameReq{} }
func (m *PingGameReq) String() string            { return proto.CompactTextString(m) }
func (*PingGameReq) ProtoMessage()               {}
func (*PingGameReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

// 接收服务器返回的心跳
type PingGameRsp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *PingGameRsp) Reset()                    { *m = PingGameRsp{} }
func (m *PingGameRsp) String() string            { return proto.CompactTextString(m) }
func (*PingGameRsp) ProtoMessage()               {}
func (*PingGameRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

// 加入房间请求
type JoinRoomReq struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *JoinRoomReq) Reset()                    { *m = JoinRoomReq{} }
func (m *JoinRoomReq) String() string            { return proto.CompactTextString(m) }
func (*JoinRoomReq) ProtoMessage()               {}
func (*JoinRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

// 加入房间回应
type JoinRoomRsp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *JoinRoomRsp) Reset()                    { *m = JoinRoomRsp{} }
func (m *JoinRoomRsp) String() string            { return proto.CompactTextString(m) }
func (*JoinRoomRsp) ProtoMessage()               {}
func (*JoinRoomRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

// 退出房间请求
type LeaveRoomReq struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *LeaveRoomReq) Reset()                    { *m = LeaveRoomReq{} }
func (m *LeaveRoomReq) String() string            { return proto.CompactTextString(m) }
func (*LeaveRoomReq) ProtoMessage()               {}
func (*LeaveRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

// 退出房间回应
type LeaveRoomRsp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *LeaveRoomRsp) Reset()                    { *m = LeaveRoomRsp{} }
func (m *LeaveRoomRsp) String() string            { return proto.CompactTextString(m) }
func (*LeaveRoomRsp) ProtoMessage()               {}
func (*LeaveRoomRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

// 游戏开始请求
type StartGameReq struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *StartGameReq) Reset()                    { *m = StartGameReq{} }
func (m *StartGameReq) String() string            { return proto.CompactTextString(m) }
func (*StartGameReq) ProtoMessage()               {}
func (*StartGameReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54} }

// 游戏开始回应
type StartGameRsp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *StartGameRsp) Reset()                    { *m = StartGameRsp{} }
func (m *StartGameRsp) String() string            { return proto.CompactTextString(m) }
func (*StartGameRsp) ProtoMessage()               {}
func (*StartGameRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

// 重新开始游戏请求
type RestartGameReq struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RestartGameReq) Reset()                    { *m = RestartGameReq{} }
func (m *RestartGameReq) String() string            { return proto.CompactTextString(m) }
func (*RestartGameReq) ProtoMessage()               {}
func (*RestartGameReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{56} }

// 重新开始游戏回应
type RestartGameRsp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RestartGameRsp) Reset()                    { *m = RestartGameRsp{} }
func (m *RestartGameRsp) String() string            { return proto.CompactTextString(m) }
func (*RestartGameRsp) ProtoMessage()               {}
func (*RestartGameRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

// 翻开一张卡牌回应
type OpenOneCardRsp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *OpenOneCardRsp) Reset()                    { *m = OpenOneCardRsp{} }
func (m *OpenOneCardRsp) String() string            { return proto.CompactTextString(m) }
func (*OpenOneCardRsp) ProtoMessage()               {}
func (*OpenOneCardRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{58} }

// 使用一张卡牌回应
type UseOneCardRsp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *UseOneCardRsp) Reset()                    { *m = UseOneCardRsp{} }
func (m *UseOneCardRsp) String() string            { return proto.CompactTextString(m) }
func (*UseOneCardRsp) ProtoMessage()               {}
func (*UseOneCardRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{59} }

// 上阵英雄回应
type EquipHeroRsp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *EquipHeroRsp) Reset()                    { *m = EquipHeroRsp{} }
func (m *EquipHeroRsp) String() string            { return proto.CompactTextString(m) }
func (*EquipHeroRsp) ProtoMessage()               {}
func (*EquipHeroRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60} }

// 下阵英雄回应
type UnEquipHeroRsp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *UnEquipHeroRsp) Reset()                    { *m = UnEquipHeroRsp{} }
func (m *UnEquipHeroRsp) String() string            { return proto.CompactTextString(m) }
func (*UnEquipHeroRsp) ProtoMessage()               {}
func (*UnEquipHeroRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{61} }

// 下阵英雄回应
type RespawnEntityRsp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RespawnEntityRsp) Reset()                    { *m = RespawnEntityRsp{} }
func (m *RespawnEntityRsp) String() string            { return proto.CompactTextString(m) }
func (*RespawnEntityRsp) ProtoMessage()               {}
func (*RespawnEntityRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{62} }

// 登出游戏请求
type LogoutGameReq struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *LogoutGameReq) Reset()                    { *m = LogoutGameReq{} }
func (m *LogoutGameReq) String() string            { return proto.CompactTextString(m) }
func (*LogoutGameReq) ProtoMessage()               {}
func (*LogoutGameReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{63} }

// 登出游戏回应
type LogoutGameRsp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *LogoutGameRsp) Reset()                    { *m = LogoutGameRsp{} }
func (m *LogoutGameRsp) String() string            { return proto.CompactTextString(m) }
func (*LogoutGameRsp) ProtoMessage()               {}
func (*LogoutGameRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{64} }

func init() {
	proto.RegisterType((*LoginGameReq)(nil), "Game.LoginGameReq")
	proto.RegisterType((*LoginGameRsp)(nil), "Game.LoginGameRsp")
	proto.RegisterType((*SyncMoneyRsp)(nil), "Game.SyncMoneyRsp")
	proto.RegisterType((*EnterGameRsp)(nil), "Game.EnterGameRsp")
	proto.RegisterType((*GameBeginRsp)(nil), "Game.GameBeginRsp")
	proto.RegisterType((*GameEndRsp)(nil), "Game.GameEndRsp")
	proto.RegisterType((*UnlockHerosRsp)(nil), "Game.UnlockHerosRsp")
	proto.RegisterType((*SetRatioReq)(nil), "Game.SetRatioReq")
	proto.RegisterType((*SetRatioRsp)(nil), "Game.SetRatioRsp")
	proto.RegisterType((*BetExtraInfo)(nil), "Game.BetExtraInfo")
	proto.RegisterType((*BetRsp)(nil), "Game.BetRsp")
	proto.RegisterType((*InvalidScoreRsp)(nil), "Game.InvalidScoreRsp")
	proto.RegisterType((*Card)(nil), "Game.Card")
	proto.RegisterType((*OpenOneCardReq)(nil), "Game.OpenOneCardReq")
	proto.RegisterType((*UseOneCardReq)(nil), "Game.UseOneCardReq")
	proto.RegisterType((*SyncInitCardRsp)(nil), "Game.SyncInitCardRsp")
	proto.RegisterType((*SyncCardRsp)(nil), "Game.SyncCardRsp")
	proto.RegisterType((*EntityInfo)(nil), "Game.EntityInfo")
	proto.RegisterType((*EquipHeroReq)(nil), "Game.EquipHeroReq")
	proto.RegisterType((*UnEquipHeroReq)(nil), "Game.UnEquipHeroReq")
	proto.RegisterType((*PositionInfo)(nil), "Game.PositionInfo")
	proto.RegisterType((*SyncInitPositionRsp)(nil), "Game.SyncInitPositionRsp")
	proto.RegisterType((*SyncAllPositionRsp)(nil), "Game.SyncAllPositionRsp")
	proto.RegisterType((*ChangePositionReq)(nil), "Game.ChangePositionReq")
	proto.RegisterType((*ChangePositionRsp)(nil), "Game.ChangePositionRsp")
	proto.RegisterType((*SyncInitEntityRsp)(nil), "Game.SyncInitEntityRsp")
	proto.RegisterType((*EntitySpawnRsp)(nil), "Game.EntitySpawnRsp")
	proto.RegisterType((*EntityDeathRsp)(nil), "Game.EntityDeathRsp")
	proto.RegisterType((*AttackEntityReq)(nil), "Game.AttackEntityReq")
	proto.RegisterType((*KillEntityReq)(nil), "Game.KillEntityReq")
	proto.RegisterType((*SyncStoryData)(nil), "Game.SyncStoryData")
	proto.RegisterType((*AllergenData)(nil), "Game.AllergenData")
	proto.RegisterType((*AllergenAttackReq)(nil), "Game.AllergenAttackReq")
	proto.RegisterType((*AllergenAttackRsp)(nil), "Game.AllergenAttackRsp")
	proto.RegisterType((*AllergenSettleRsp)(nil), "Game.AllergenSettleRsp")
	proto.RegisterType((*ResetAllergenSettleFlagReq)(nil), "Game.ResetAllergenSettleFlagReq")
	proto.RegisterType((*ClownCard)(nil), "Game.ClownCard")
	proto.RegisterType((*ClownData)(nil), "Game.ClownData")
	proto.RegisterType((*ClownOpenAllCardReq)(nil), "Game.ClownOpenAllCardReq")
	proto.RegisterType((*ClownOpenAllCardRsp)(nil), "Game.ClownOpenAllCardRsp")
	proto.RegisterType((*ClownSettleRsp)(nil), "Game.ClownSettleRsp")
	proto.RegisterType((*ResetClownSettleFlagReq)(nil), "Game.ResetClownSettleFlagReq")
	proto.RegisterType((*Message)(nil), "Game.Message")
	proto.RegisterType((*HttpResult)(nil), "Game.HttpResult")
	proto.RegisterType((*AllocServer)(nil), "Game.AllocServer")
	proto.RegisterType((*AllocServerAddressResp)(nil), "Game.AllocServerAddressResp")
	proto.RegisterType((*QPPartnerUserLoginReq)(nil), "Game.QPPartnerUserLoginReq")
	proto.RegisterType((*WechatSignReq)(nil), "Game.WechatSignReq")
	proto.RegisterType((*PingGameReq)(nil), "Game.PingGameReq")
	proto.RegisterType((*PingGameRsp)(nil), "Game.PingGameRsp")
	proto.RegisterType((*JoinRoomReq)(nil), "Game.JoinRoomReq")
	proto.RegisterType((*JoinRoomRsp)(nil), "Game.JoinRoomRsp")
	proto.RegisterType((*LeaveRoomReq)(nil), "Game.LeaveRoomReq")
	proto.RegisterType((*LeaveRoomRsp)(nil), "Game.LeaveRoomRsp")
	proto.RegisterType((*StartGameReq)(nil), "Game.StartGameReq")
	proto.RegisterType((*StartGameRsp)(nil), "Game.StartGameRsp")
	proto.RegisterType((*RestartGameReq)(nil), "Game.RestartGameReq")
	proto.RegisterType((*RestartGameRsp)(nil), "Game.RestartGameRsp")
	proto.RegisterType((*OpenOneCardRsp)(nil), "Game.OpenOneCardRsp")
	proto.RegisterType((*UseOneCardRsp)(nil), "Game.UseOneCardRsp")
	proto.RegisterType((*EquipHeroRsp)(nil), "Game.EquipHeroRsp")
	proto.RegisterType((*UnEquipHeroRsp)(nil), "Game.UnEquipHeroRsp")
	proto.RegisterType((*RespawnEntityRsp)(nil), "Game.RespawnEntityRsp")
	proto.RegisterType((*LogoutGameReq)(nil), "Game.LogoutGameReq")
	proto.RegisterType((*LogoutGameRsp)(nil), "Game.LogoutGameRsp")
	proto.RegisterEnum("Game.PROTOCOL", PROTOCOL_name, PROTOCOL_value)
	proto.RegisterEnum("Game.ErrorCode", ErrorCode_name, ErrorCode_value)
	proto.RegisterEnum("Game.ItemType", ItemType_name, ItemType_value)
	proto.RegisterEnum("Game.CardStatus", CardStatus_name, CardStatus_value)
	proto.RegisterEnum("Game.ClownCardType", ClownCardType_name, ClownCardType_value)
}

func init() { proto.RegisterFile("game_message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2828 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0x5b, 0x6f, 0x24, 0x47,
	0xf5, 0x4f, 0xcf, 0x8c, 0x2f, 0x73, 0xec, 0xb1, 0xdb, 0xb5, 0xb7, 0xd9, 0x8d, 0xb3, 0x71, 0x3a,
	0x51, 0xe4, 0xff, 0xe6, 0x4f, 0x14, 0xad, 0x04, 0x12, 0x11, 0x52, 0xd4, 0x9e, 0xae, 0xb5, 0x3b,
	0xdb, 0xd3, 0xdd, 0x5b, 0xd5, 0xb3, 0x1b, 0xe7, 0x21, 0xad, 0x8e, 0x5d, 0x71, 0x46, 0x3b, 0xee,
	0x9e, 0xed, 0x6e, 0xef, 0x66, 0x5f, 0x90, 0x90, 0x20, 0xe2, 0x81, 0x17, 0x6e, 0x6f, 0xac, 0xc5,
	0x03, 0x1f, 0x00, 0x08, 0x48, 0x28, 0x84, 0x17, 0x04, 0x04, 0xa4, 0x5c, 0xb8, 0x93, 0x04, 0x90,
	0x00, 0x09, 0x91, 0x1b, 0x97, 0x8f, 0x80, 0xaa, 0xaa, 0xaf, 0x33, 0xde, 0xcd, 0x45, 0xbc, 0xcd,
	0xf9, 0x9d, 0x53, 0xe7, 0x5e, 0xe7, 0x54, 0x0f, 0xa0, 0xbd, 0x60, 0x9f, 0xf9, 0xfb, 0x2c, 0x49,
	0x82, 0x3d, 0xf6, 0xf0, 0x38, 0x8e, 0xd2, 0x08, 0xb5, 0x36, 0x83, 0x7d, 0xa6, 0x3d, 0x09, 0x8b,
	0x56, 0xb4, 0x37, 0x0c, 0x39, 0x41, 0xd8, 0x35, 0x74, 0x06, 0xe6, 0xdd, 0x51, 0x70, 0x93, 0xc5,
	0xe6, 0x6e, 0x57, 0x59, 0x6b, 0xac, 0x37, 0x49, 0x41, 0xa3, 0xe3, 0x30, 0xe3, 0x45, 0x57, 0x59,
	0xd8, 0x6d, 0xac, 0x35, 0xd6, 0xdb, 0x44, 0x12, 0xa8, 0x0b, 0x73, 0x97, 0x59, 0x9c, 0x0c, 0xa3,
	0xb0, 0xdb, 0x14, 0x78, 0x4e, 0x6a, 0xcf, 0x54, 0x75, 0x27, 0x63, 0x84, 0xa0, 0x65, 0x0f, 0x77,
	0xae, 0x0a, 0xbd, 0x6d, 0x22, 0x7e, 0x23, 0x15, 0x9a, 0x94, 0x3d, 0x27, 0x34, 0xce, 0x10, 0xfe,
	0x53, 0x78, 0x10, 0xc5, 0x69, 0x1c, 0x0c, 0xd3, 0x4c, 0x61, 0x41, 0x73, 0x0f, 0xfa, 0x51, 0xc8,
	0x6e, 0x76, 0x5b, 0xc2, 0x35, 0x49, 0x68, 0x36, 0x2c, 0xd2, 0x9b, 0xe1, 0x8e, 0x20, 0x32, 0x3b,
	0xde, 0xcd, 0x31, 0x13, 0x76, 0x3a, 0x44, 0xfc, 0xe6, 0x27, 0x0d, 0x36, 0x4a, 0x03, 0xa1, 0xb2,
	0x45, 0x24, 0x71, 0x1b, 0x7d, 0xe7, 0x60, 0x11, 0x87, 0x29, 0x8b, 0x73, 0xbf, 0xcf, 0xc0, 0xfc,
	0x16, 0x8b, 0x23, 0x6b, 0x98, 0xa4, 0x5d, 0x65, 0xad, 0xb9, 0xde, 0x21, 0x05, 0xad, 0xc5, 0xb0,
	0xc8, 0xc5, 0x36, 0xd8, 0xde, 0x30, 0xe4, 0xb2, 0xc7, 0x61, 0x86, 0x04, 0xe9, 0x30, 0xca, 0x8c,
	0x4b, 0x82, 0xe7, 0xc8, 0x62, 0xd7, 0xd9, 0xc8, 0x34, 0x44, 0xa4, 0x1d, 0x92, 0x93, 0xa5, 0x07,
	0xcd, 0x8a, 0x07, 0x68, 0x15, 0xda, 0x17, 0x87, 0xa3, 0x51, 0x2f, 0x3a, 0x08, 0x53, 0xe1, 0x5b,
	0x8b, 0x94, 0x80, 0xb6, 0x08, 0xc0, 0x6d, 0xe2, 0x70, 0x97, 0x24, 0x63, 0xcd, 0x85, 0xa5, 0x41,
	0x38, 0x8a, 0x76, 0xae, 0x72, 0x9f, 0x12, 0xee, 0x43, 0xed, 0xb4, 0x32, 0x71, 0x1a, 0xad, 0xc1,
	0x42, 0x45, 0xbe, 0xdb, 0x10, 0x01, 0x55, 0x21, 0xed, 0x7e, 0x58, 0xa0, 0x2c, 0x15, 0x9e, 0xf3,
	0x96, 0x38, 0x32, 0xa4, 0x9a, 0xd0, 0xed, 0xe2, 0xd6, 0xbe, 0xa8, 0xc0, 0xe2, 0x06, 0x4b, 0xf1,
	0x73, 0x69, 0x1c, 0x98, 0xe1, 0x33, 0x22, 0x11, 0x1b, 0x2c, 0xad, 0x54, 0x27, 0x27, 0x79, 0x92,
	0x37, 0x58, 0x6a, 0x86, 0xbb, 0x59, 0x37, 0x74, 0x48, 0x41, 0xa3, 0xb3, 0x00, 0x7a, 0x9a, 0x06,
	0x3b, 0x57, 0x59, 0x6c, 0x1a, 0xdd, 0x99, 0x35, 0x65, 0xbd, 0x43, 0x2a, 0x08, 0xd2, 0xb8, 0x95,
	0x8a, 0xc4, 0xac, 0x90, 0xa8, 0x61, 0xda, 0x97, 0x14, 0x98, 0xdd, 0x60, 0xe9, 0x1d, 0x6b, 0xd4,
	0x8b, 0xc2, 0xe4, 0x60, 0x9f, 0x09, 0xfb, 0x2d, 0x92, 0x93, 0x1f, 0xa5, 0x77, 0xd0, 0x83, 0xd0,
	0xe2, 0x81, 0x0a, 0x17, 0x16, 0xce, 0xa3, 0x87, 0x79, 0xa1, 0x1e, 0xae, 0xa6, 0x80, 0x08, 0xbe,
	0x76, 0x15, 0x96, 0xcd, 0xf0, 0x7a, 0x30, 0x1a, 0xee, 0xd2, 0x9d, 0x28, 0x66, 0x99, 0x5b, 0x52,
	0xa1, 0x2c, 0x59, 0xa6, 0xf0, 0xf6, 0x6e, 0x21, 0x68, 0x19, 0x2c, 0xd9, 0xc9, 0x2e, 0x89, 0xf8,
	0xcd, 0x75, 0xc8, 0x14, 0xb6, 0xc4, 0x85, 0x92, 0x84, 0xf6, 0x59, 0x68, 0xf5, 0x82, 0x78, 0xb7,
	0xe4, 0x66, 0x81, 0x17, 0xd9, 0x35, 0x53, 0xb6, 0xcf, 0xab, 0x50, 0xf4, 0x67, 0x05, 0x41, 0x27,
	0x61, 0x96, 0x53, 0xa6, 0x21, 0x2c, 0x75, 0x48, 0x46, 0xa1, 0x75, 0x98, 0xa5, 0x69, 0x90, 0x1e,
	0x24, 0xc2, 0xd8, 0xd2, 0x79, 0x55, 0x06, 0xcb, 0x2d, 0x49, 0x9c, 0x64, 0x7c, 0xed, 0x49, 0x58,
	0x72, 0xc6, 0x2c, 0x74, 0x42, 0xc6, 0x99, 0xbc, 0xa7, 0x56, 0xa1, 0xcd, 0x7f, 0x56, 0xbd, 0x29,
	0x01, 0x31, 0x68, 0x86, 0xfb, 0x2c, 0xc9, 0x0c, 0x4a, 0xa2, 0x2c, 0x5b, 0xab, 0xda, 0x62, 0x9f,
	0x80, 0xce, 0x20, 0x61, 0x1f, 0x56, 0xb5, 0xf6, 0x69, 0x58, 0xe6, 0xb3, 0xc2, 0x0c, 0x87, 0xa9,
	0x38, 0x90, 0x8c, 0xd1, 0x83, 0x30, 0xcf, 0x7f, 0x16, 0xd7, 0x7b, 0xe1, 0x3c, 0x94, 0x91, 0x90,
	0x82, 0xa7, 0x7d, 0x12, 0x16, 0xf8, 0xd1, 0x89, 0x63, 0x46, 0x90, 0x06, 0xc2, 0xcc, 0x11, 0xc7,
	0x38, 0x4f, 0x7b, 0x0a, 0x00, 0x87, 0xe9, 0x30, 0xbd, 0x29, 0x2e, 0xc0, 0x12, 0x34, 0x4c, 0x23,
	0x73, 0xab, 0x21, 0x93, 0x4b, 0xa2, 0x51, 0x99, 0xf8, 0x8c, 0x2a, 0x66, 0x58, 0xb3, 0x3e, 0xc3,
	0xca, 0xe2, 0xe6, 0xe5, 0xd3, 0x36, 0x60, 0x11, 0x5f, 0x3b, 0x18, 0x8e, 0xf9, 0xdd, 0xcd, 0x27,
	0x78, 0x94, 0x0c, 0x53, 0x3e, 0x90, 0xa5, 0x9d, 0x82, 0xbe, 0x9d, 0x35, 0xed, 0xff, 0xf9, 0x0c,
	0xf9, 0xb0, 0x5a, 0xb4, 0xa7, 0x60, 0x31, 0xff, 0x2d, 0x62, 0xfa, 0x18, 0x16, 0xf9, 0x99, 0x2c,
	0x2b, 0x79, 0x5b, 0x15, 0xb4, 0xd6, 0x87, 0x63, 0x79, 0x8d, 0x72, 0x3d, 0x3c, 0xe1, 0x9f, 0x2a,
	0xcd, 0x8a, 0x5a, 0xcd, 0x8a, 0x5a, 0x65, 0x57, 0xac, 0xea, 0x10, 0xa9, 0xc9, 0x69, 0x16, 0x20,
	0xae, 0x4e, 0x1f, 0x8d, 0xfe, 0x17, 0xda, 0x76, 0x60, 0xa5, 0xf7, 0x6c, 0x10, 0xee, 0xb1, 0x42,
	0x19, 0xbb, 0x86, 0x1e, 0x84, 0x25, 0x1a, 0x1d, 0xc4, 0x3b, 0x6c, 0x22, 0x0f, 0x13, 0x28, 0x97,
	0xf3, 0x82, 0x78, 0x8f, 0x15, 0x71, 0x65, 0x59, 0x99, 0x40, 0xb5, 0x17, 0x94, 0x29, 0x2b, 0xa2,
	0xe3, 0x3e, 0xb4, 0x15, 0x89, 0x14, 0x19, 0x6e, 0x54, 0xe5, 0x72, 0xf4, 0x08, 0x6f, 0x9a, 0x47,
	0x79, 0x53, 0xca, 0x15, 0xfa, 0x5a, 0x55, 0xb9, 0xa2, 0x6e, 0x18, 0x56, 0xf2, 0xba, 0x49, 0x8c,
	0x3b, 0xfd, 0x48, 0xde, 0xfe, 0x95, 0xfb, 0x95, 0x4d, 0x8a, 0xf2, 0x5a, 0x90, 0x8a, 0x8c, 0xf6,
	0x28, 0x2c, 0x49, 0x8a, 0x8e, 0x83, 0x1b, 0x22, 0xf0, 0x75, 0x98, 0x95, 0x48, 0x76, 0xd1, 0xa6,
	0xcf, 0x67, 0x7c, 0xed, 0xe9, 0xfc, 0xac, 0xc1, 0x82, 0xf4, 0xd9, 0x6c, 0x79, 0x17, 0x6e, 0x2b,
	0xf5, 0x46, 0xe3, 0xcd, 0x69, 0x47, 0xf1, 0x7e, 0x30, 0x12, 0x09, 0x9a, 0x27, 0x19, 0x55, 0x5f,
	0xa0, 0xcd, 0xc9, 0xf5, 0xfb, 0x39, 0x05, 0x96, 0xe5, 0x62, 0xc9, 0xa2, 0x64, 0xd7, 0x26, 0x36,
	0x94, 0xb4, 0x73, 0xa7, 0x0d, 0x25, 0x0b, 0x52, 0xc3, 0x3e, 0xd2, 0xd4, 0x7b, 0x08, 0x3a, 0xdc,
	0xa1, 0xd2, 0x81, 0x3b, 0x84, 0xa9, 0x51, 0xe8, 0xf0, 0xba, 0xd0, 0x34, 0x8a, 0x6f, 0xf2, 0x91,
	0x54, 0xdf, 0x34, 0xcd, 0xca, 0xa6, 0x11, 0x22, 0xc5, 0x8d, 0xcc, 0x49, 0xb1, 0x69, 0xf8, 0x98,
	0xe3, 0x9b, 0x77, 0x91, 0x88, 0xdf, 0xda, 0x8f, 0x15, 0x58, 0xd4, 0x47, 0x23, 0x16, 0xef, 0xb1,
	0x50, 0x28, 0x3d, 0x59, 0xac, 0x03, 0x45, 0x26, 0x53, 0x52, 0xe5, 0xd4, 0x6a, 0x54, 0x97, 0xce,
	0x2a, 0xb4, 0xad, 0x68, 0xe7, 0xaa, 0x0c, 0x4d, 0x9a, 0x2b, 0x01, 0x9e, 0x4e, 0x2f, 0x4a, 0x83,
	0x11, 0xb9, 0x11, 0xc4, 0xbb, 0xdd, 0xd6, 0x9a, 0xb2, 0xde, 0x22, 0x15, 0x84, 0xa7, 0x53, 0x26,
	0x8e, 0xb0, 0xe4, 0x60, 0x94, 0x76, 0x67, 0xd6, 0x9a, 0xeb, 0xf3, 0xa4, 0x86, 0x95, 0x32, 0x99,
	0x57, 0xb3, 0x55, 0x99, 0x6c, 0x31, 0xfd, 0x1f, 0xac, 0xe4, 0x31, 0xe4, 0x67, 0xaf, 0x1d, 0xbd,
	0x25, 0xb5, 0x97, 0x95, 0x29, 0x59, 0xb9, 0xb3, 0x8f, 0xd8, 0xa8, 0xc5, 0x83, 0xa1, 0x51, 0x7d,
	0x30, 0xac, 0xc1, 0xc2, 0x85, 0x61, 0x9c, 0xa4, 0x84, 0x89, 0xa8, 0x64, 0x5f, 0x55, 0x21, 0xee,
	0x32, 0x1d, 0x86, 0x7b, 0x23, 0x96, 0x89, 0xc8, 0x97, 0x5f, 0x0d, 0xe3, 0x5a, 0x7a, 0xd1, 0xfe,
	0xd3, 0x51, 0x26, 0x32, 0x23, 0xb5, 0x54, 0x20, 0x9e, 0x3c, 0x41, 0xca, 0xf6, 0x9d, 0x15, 0x02,
	0x15, 0x44, 0x7b, 0xac, 0x0c, 0x84, 0xb2, 0x34, 0x1d, 0x4d, 0x3f, 0x3e, 0x8a, 0x96, 0x38, 0x32,
	0x10, 0x6d, 0x15, 0xce, 0x10, 0x96, 0xb0, 0xb4, 0xae, 0xe5, 0xc2, 0x28, 0xd8, 0x23, 0xec, 0x9a,
	0x76, 0x11, 0xda, 0xbd, 0x51, 0x74, 0x23, 0xbc, 0xc3, 0x8b, 0x23, 0x5f, 0x6e, 0x8d, 0x0f, 0x7a,
	0xa0, 0x6b, 0x49, 0xa6, 0xec, 0x83, 0x3a, 0x8c, 0x44, 0x07, 0xe1, 0x6e, 0xde, 0x61, 0x82, 0xe0,
	0x37, 0xa2, 0x1f, 0x3c, 0x27, 0x19, 0xd9, 0x86, 0xc9, 0x69, 0xde, 0x7d, 0x17, 0x62, 0xc6, 0xe4,
	0x75, 0x93, 0x17, 0xab, 0x04, 0xb4, 0x87, 0xe0, 0x98, 0x30, 0xca, 0xdf, 0x2c, 0xfa, 0x68, 0x94,
	0x3f, 0x2c, 0x0a, 0x33, 0x4a, 0xc5, 0x8c, 0xf6, 0x2d, 0xe5, 0x08, 0xe9, 0xec, 0x91, 0x39, 0x25,
	0x2d, 0xd6, 0xa1, 0x6c, 0xd9, 0x7c, 0x1d, 0xca, 0x66, 0x7d, 0xa8, 0xf2, 0x06, 0x69, 0x8a, 0x19,
	0xb9, 0x9c, 0x3d, 0x26, 0xf2, 0x54, 0x96, 0x0f, 0x91, 0x3b, 0x7b, 0x2f, 0x52, 0x9e, 0xe0, 0x50,
	0xb6, 0xc6, 0x3c, 0x91, 0x84, 0xf6, 0x19, 0x58, 0x12, 0xaa, 0x3e, 0x5e, 0xc5, 0x4f, 0xc3, 0x29,
	0x51, 0xf1, 0x8a, 0x8a, 0xb2, 0xdc, 0x73, 0x7d, 0xf9, 0x5d, 0x39, 0xf1, 0xed, 0xa8, 0xd4, 0xbe,
	0x1d, 0x55, 0x68, 0x3a, 0xe3, 0x24, 0xff, 0xce, 0x73, 0xc6, 0x49, 0x31, 0x54, 0x9a, 0x95, 0xa1,
	0xf2, 0x08, 0xc0, 0x56, 0x9a, 0x8e, 0xb3, 0xa4, 0x2c, 0x41, 0x03, 0xcb, 0x1d, 0x37, 0x43, 0x1a,
	0x38, 0x2c, 0x4e, 0x34, 0x2a, 0x27, 0x1e, 0x83, 0x05, 0x7d, 0x34, 0x8a, 0x76, 0x28, 0x8b, 0xaf,
	0xb3, 0x98, 0xe7, 0x97, 0xa7, 0x2d, 0xfb, 0x78, 0x9d, 0x21, 0x19, 0xc5, 0x67, 0xdb, 0x66, 0x1c,
	0x1d, 0x8c, 0xcd, 0xdd, 0xcc, 0x85, 0x9c, 0xd4, 0xce, 0xc3, 0xc9, 0x8a, 0x02, 0x7d, 0x77, 0x37,
	0x66, 0x49, 0x42, 0x58, 0x32, 0xe6, 0x67, 0x32, 0x32, 0xfb, 0x62, 0xcd, 0x49, 0xed, 0xf9, 0x06,
	0x9c, 0xb8, 0xe4, 0xba, 0x41, 0x9c, 0x86, 0x2c, 0x1e, 0x24, 0x2c, 0x16, 0x9f, 0xb9, 0xbc, 0x47,
	0x72, 0xfb, 0x46, 0xcd, 0xbe, 0xc1, 0x4b, 0x96, 0x89, 0x67, 0xc3, 0x7f, 0x86, 0x94, 0x80, 0x6c,
	0xd5, 0x58, 0x6e, 0x86, 0xa6, 0x60, 0x16, 0x74, 0xf5, 0xf3, 0xba, 0x55, 0xfb, 0xbc, 0xe6, 0x9c,
	0x41, 0xc8, 0x1f, 0x29, 0x86, 0x28, 0x75, 0x9b, 0xe4, 0x24, 0xd7, 0xc7, 0x3f, 0xae, 0xed, 0x60,
	0x9f, 0x89, 0xfb, 0xdf, 0x26, 0x05, 0xcd, 0xa7, 0xc3, 0x16, 0x0b, 0x76, 0x87, 0xfb, 0x7b, 0x83,
	0x78, 0xd4, 0x9d, 0x13, 0xdc, 0x0a, 0x92, 0x7f, 0x90, 0xcf, 0x97, 0x1f, 0xe4, 0xa7, 0xa1, 0xf5,
	0x78, 0x12, 0x85, 0xdd, 0xf6, 0x9a, 0xb2, 0x3e, 0xff, 0xe8, 0xcc, 0x33, 0xc1, 0x28, 0x61, 0x44,
	0x40, 0xda, 0x7d, 0xd0, 0xb9, 0xc2, 0x76, 0x9e, 0x0d, 0x52, 0x3a, 0xdc, 0x13, 0xf1, 0xab, 0xd0,
	0x3c, 0x88, 0x47, 0x59, 0xbe, 0xf8, 0x4f, 0xad, 0x03, 0x0b, 0xee, 0x30, 0xdc, 0xcb, 0xfe, 0x5f,
	0xa8, 0x91, 0xc9, 0x98, 0x93, 0x8f, 0x47, 0xc3, 0x90, 0x44, 0xd1, 0x7e, 0xc6, 0x2d, 0xc8, 0x64,
	0xac, 0x2d, 0xc1, 0xa2, 0xc5, 0x82, 0xeb, 0x2c, 0x67, 0xd7, 0x68, 0xc9, 0xa7, 0x69, 0x10, 0xa7,
	0xb9, 0xf2, 0x1a, 0x9d, 0x8c, 0x35, 0x15, 0x96, 0x08, 0x4b, 0xaa, 0x12, 0x13, 0x88, 0x94, 0xa9,
	0x7e, 0x9b, 0x24, 0x63, 0x6d, 0xb9, 0xf6, 0x45, 0x21, 0xcd, 0x94, 0x6f, 0x63, 0x79, 0xa4, 0xfa,
	0x5a, 0x4e, 0xc6, 0x1a, 0x02, 0x95, 0xb7, 0x4c, 0x70, 0x23, 0x2c, 0x1e, 0x3e, 0x5c, 0x8d, 0x15,
	0xed, 0x45, 0x07, 0x85, 0xed, 0x3a, 0x90, 0x8c, 0xcf, 0xbd, 0x04, 0x30, 0xef, 0x12, 0xc7, 0x73,
	0x7a, 0x8e, 0x85, 0x54, 0x58, 0xdc, 0xd0, 0x29, 0xf6, 0xfb, 0x98, 0x52, 0x7d, 0x13, 0xab, 0x0a,
	0x47, 0x74, 0xcb, 0x72, 0x7a, 0x3e, 0xc5, 0xe4, 0x32, 0x26, 0x6a, 0x07, 0xad, 0x42, 0xb7, 0x8a,
	0xf8, 0xba, 0x61, 0x10, 0x4c, 0xa9, 0x4f, 0xa8, 0xab, 0x2e, 0xa1, 0x33, 0x70, 0xd2, 0xd5, 0x89,
	0x67, 0x63, 0xe2, 0x0f, 0x28, 0x26, 0xbe, 0xe5, 0x6c, 0x9a, 0xb6, 0x4f, 0xf0, 0x25, 0x55, 0x45,
	0xc7, 0x60, 0xf9, 0x0a, 0xee, 0x6d, 0xe9, 0x9e, 0x4f, 0xcd, 0x4d, 0x09, 0xae, 0xa0, 0x65, 0x58,
	0xd8, 0xf2, 0x3c, 0xd7, 0x27, 0x98, 0x0e, 0x2c, 0x4f, 0x3d, 0x8f, 0x8e, 0xc1, 0x92, 0x3c, 0xb4,
	0xa9, 0xf7, 0xb1, 0x10, 0x7a, 0x7b, 0x6e, 0x12, 0xa4, 0xae, 0xfa, 0xce, 0x1c, 0x3a, 0x0e, 0xcb,
	0x96, 0xb3, 0xe9, 0x0c, 0xbc, 0x52, 0xf4, 0xdd, 0x69, 0x94, 0xba, 0xea, 0x7b, 0x73, 0x08, 0x41,
	0xc7, 0x35, 0xed, 0xcd, 0x52, 0xf2, 0xfd, 0x49, 0x8c, 0xba, 0xea, 0x3f, 0x85, 0x21, 0xba, 0x6d,
	0xf7, 0xfc, 0xbe, 0x63, 0xe3, 0x6d, 0x01, 0xfe, 0x47, 0x08, 0x3e, 0xee, 0xf0, 0x30, 0x1c, 0xa7,
	0x2f, 0x0e, 0xbf, 0x32, 0x3f, 0x81, 0x51, 0x57, 0x7d, 0x75, 0x5e, 0x78, 0x89, 0xf5, 0xcb, 0xb8,
	0x14, 0x7c, 0x6d, 0x0a, 0xa4, 0xae, 0xfa, 0xba, 0x00, 0xb1, 0xed, 0x61, 0x52, 0xda, 0xfe, 0x76,
	0x5b, 0xd8, 0xf6, 0x74, 0x52, 0x09, 0xe7, 0x3b, 0x53, 0x20, 0x75, 0xd5, 0xef, 0xb6, 0xd1, 0x09,
	0x50, 0x09, 0x9e, 0x90, 0x7d, 0xe1, 0x08, 0x98, 0xba, 0xea, 0xf7, 0x84, 0x0a, 0x41, 0x6e, 0x60,
	0x51, 0x0b, 0xea, 0xaa, 0xdf, 0x6f, 0xa3, 0x15, 0x58, 0x14, 0x20, 0xb6, 0x0d, 0x01, 0xfd, 0xa0,
	0xcd, 0x43, 0xa2, 0xd8, 0xf3, 0x89, 0xee, 0x99, 0x8e, 0x50, 0xf9, 0xe2, 0x24, 0x46, 0x5d, 0xf5,
	0x87, 0x6d, 0xb4, 0x08, 0x73, 0x1b, 0x1c, 0xa3, 0xae, 0xfa, 0x52, 0x1b, 0x9d, 0x84, 0x15, 0xd3,
	0xbe, 0xac, 0x5b, 0xa6, 0xe1, 0xd3, 0x9e, 0x43, 0xa4, 0xd5, 0x1f, 0x09, 0xdc, 0x71, 0xb1, 0xed,
	0x3b, 0x36, 0xf6, 0x7b, 0x3a, 0x31, 0x84, 0xc6, 0x9f, 0x1c, 0x85, 0x53, 0x57, 0xfd, 0xa9, 0x70,
	0x7e, 0x40, 0x71, 0x5d, 0xfc, 0x67, 0x47, 0xc0, 0xd4, 0x55, 0x5f, 0x96, 0x7e, 0xf1, 0x3a, 0x15,
	0xd8, 0xcf, 0xdb, 0xe8, 0x14, 0x20, 0x81, 0x99, 0xb6, 0xe9, 0x95, 0x8c, 0x5f, 0x88, 0x04, 0xe0,
	0x4b, 0x03, 0xd3, 0xf5, 0xb7, 0x30, 0x91, 0x91, 0xbd, 0x36, 0x05, 0xf2, 0xba, 0x48, 0x6b, 0xf6,
	0x84, 0xec, 0x2f, 0x8f, 0x80, 0xa9, 0xab, 0xfe, 0xaa, 0x8d, 0xee, 0x81, 0x6e, 0x6f, 0x4b, 0xb7,
	0x37, 0xb1, 0x44, 0x5d, 0x87, 0x9a, 0x9e, 0xe9, 0xc8, 0xce, 0xfe, 0xf5, 0x1d, 0xd8, 0xd4, 0x55,
	0x7f, 0xd3, 0x46, 0x77, 0xc3, 0xc9, 0xd2, 0xdd, 0x1a, 0xf3, 0xb7, 0x6d, 0x74, 0x06, 0x4e, 0x08,
	0xa6, 0x6e, 0x59, 0x75, 0xde, 0xef, 0x84, 0x37, 0xd8, 0xf6, 0x4c, 0x6f, 0xdb, 0xa7, 0xae, 0x7e,
	0x45, 0xc2, 0x6f, 0x88, 0xc4, 0xea, 0x9e, 0xa7, 0xf7, 0x2e, 0xfa, 0x19, 0x97, 0xbb, 0xf1, 0x66,
	0x55, 0xdc, 0xc0, 0xba, 0xb7, 0x25, 0xc4, 0xdf, 0x6a, 0xf3, 0x7b, 0x72, 0xd1, 0xb4, 0xac, 0xaa,
	0xf0, 0x1f, 0xdb, 0xe8, 0x34, 0x1c, 0x2f, 0x9d, 0xca, 0x59, 0xd4, 0x55, 0xff, 0x94, 0x25, 0xc1,
	0x72, 0x7a, 0x17, 0x45, 0x38, 0xf2, 0xc2, 0xff, 0x59, 0xe8, 0x11, 0x27, 0xa8, 0xe7, 0x90, 0x6d,
	0xdf, 0xd0, 0x3d, 0x5d, 0xfd, 0x7b, 0x1b, 0x75, 0xe1, 0x98, 0x6e, 0x59, 0x98, 0x6c, 0x62, 0xdb,
	0xcf, 0xbc, 0xe2, 0x16, 0xfe, 0x71, 0x34, 0x87, 0xba, 0xea, 0xdb, 0x75, 0x0e, 0xc5, 0x9e, 0x67,
	0x65, 0x37, 0xbd, 0x8d, 0xee, 0x87, 0xb3, 0x04, 0xf3, 0x3e, 0x9c, 0xe4, 0x5f, 0xb0, 0xf4, 0x4d,
	0x79, 0xf1, 0xdb, 0x68, 0x15, 0x4e, 0xf5, 0x2c, 0xe7, 0x8a, 0xed, 0x8b, 0xf6, 0xe2, 0x89, 0x2b,
	0xfa, 0xe8, 0xfd, 0xdb, 0x73, 0xf9, 0xb5, 0x17, 0xb1, 0x49, 0x6e, 0xc5, 0xee, 0xbf, 0xda, 0x68,
	0x0d, 0xee, 0x96, 0x76, 0x6b, 0xcc, 0xc2, 0xe8, 0xbf, 0xdb, 0xe7, 0x5e, 0x9c, 0x83, 0x36, 0x8e,
	0xe3, 0x28, 0xee, 0x45, 0xbb, 0x0c, 0x2d, 0xc0, 0x1c, 0x1d, 0xf4, 0x7a, 0x98, 0x52, 0xf5, 0x2e,
	0x3e, 0xd9, 0x5c, 0x9d, 0xe8, 0x7d, 0x1f, 0x13, 0xe2, 0x10, 0x39, 0x4b, 0x6d, 0xc7, 0xf3, 0x09,
	0x36, 0x37, 0xa9, 0x87, 0x89, 0xda, 0x40, 0xc7, 0x41, 0x75, 0x2d, 0x7d, 0x1b, 0x13, 0x9f, 0x33,
	0xf0, 0x13, 0x26, 0xf5, 0xd4, 0x26, 0x3a, 0x09, 0xc8, 0xc0, 0x14, 0x13, 0x53, 0xb7, 0xcc, 0x27,
	0xb1, 0x7f, 0x41, 0x37, 0x2d, 0x6c, 0xa8, 0x2d, 0x3e, 0x5b, 0x2f, 0x10, 0x4c, 0xb7, 0xe4, 0x64,
	0x95, 0x13, 0x4a, 0xea, 0x9e, 0xe1, 0xba, 0xe9, 0x36, 0xf5, 0x70, 0x6e, 0x6d, 0x96, 0xb7, 0x97,
	0x1c, 0x31, 0x62, 0xee, 0x88, 0xba, 0x65, 0x9a, 0xbe, 0x6c, 0xa3, 0x07, 0xe0, 0xde, 0x0a, 0x73,
	0x13, 0x7b, 0xbe, 0x98, 0xfb, 0xa6, 0x7d, 0xc1, 0xc9, 0xa5, 0xbe, 0x62, 0xf3, 0xf0, 0x2b, 0x52,
	0x04, 0xeb, 0x86, 0xbf, 0xe9, 0x58, 0x46, 0x2e, 0xf1, 0xd5, 0x49, 0x09, 0x8b, 0x17, 0xb3, 0x2a,
	0xf1, 0xb5, 0x29, 0x09, 0x47, 0x37, 0x44, 0x8f, 0xe4, 0x12, 0x5f, 0xb7, 0xd1, 0x19, 0x38, 0xae,
	0xf7, 0x7a, 0xce, 0xc0, 0xe6, 0xa9, 0xe9, 0x3b, 0x1e, 0x96, 0x4b, 0x43, 0xfd, 0xe6, 0x37, 0x14,
	0x74, 0x0f, 0x9c, 0xaa, 0xcc, 0x33, 0xea, 0xe9, 0xde, 0x80, 0x66, 0x11, 0x7e, 0xfe, 0x96, 0x82,
	0xee, 0x85, 0xd3, 0xb5, 0x81, 0x57, 0x13, 0xf8, 0xc2, 0x2d, 0x05, 0x9d, 0x86, 0x63, 0xe5, 0xf8,
	0x2a, 0x73, 0xfc, 0xf6, 0x2d, 0x05, 0xad, 0xc1, 0x99, 0x92, 0x35, 0xe5, 0xf9, 0x3b, 0xb7, 0x14,
	0x74, 0x3f, 0xdc, 0x53, 0x4a, 0xc8, 0xf6, 0xe6, 0x69, 0xc4, 0x85, 0xd0, 0x7b, 0x52, 0x8d, 0x68,
	0x24, 0xd1, 0x56, 0x53, 0x6a, 0x5e, 0x39, 0x14, 0x3e, 0x08, 0x09, 0xdd, 0xe2, 0x19, 0xdc, 0x16,
	0x92, 0xd8, 0x50, 0x5f, 0x3d, 0x54, 0xd0, 0x29, 0x58, 0xa9, 0xb1, 0x06, 0x14, 0x1b, 0xea, 0x6b,
	0x87, 0x0a, 0xea, 0x02, 0x12, 0x0c, 0xee, 0x32, 0xdf, 0xb6, 0x57, 0x38, 0x4b, 0x7d, 0xfd, 0x50,
	0x41, 0x67, 0xa1, 0x8b, 0x6d, 0x31, 0x89, 0x88, 0x63, 0x61, 0xdf, 0x34, 0x2a, 0x61, 0xfd, 0xfe,
	0x50, 0x41, 0xab, 0xbc, 0xec, 0x25, 0x9f, 0x33, 0xe5, 0xad, 0x55, 0xff, 0x70, 0x28, 0x42, 0xaa,
	0x72, 0x73, 0xbb, 0x1b, 0x7c, 0x0f, 0x70, 0x58, 0x7d, 0xe3, 0x50, 0x64, 0x75, 0x60, 0x67, 0x62,
	0xc5, 0xec, 0x31, 0xa9, 0x6f, 0x0f, 0x2c, 0x4b, 0x7d, 0x53, 0x46, 0x54, 0x08, 0xf4, 0xf8, 0xa6,
	0xb5, 0xcc, 0xbe, 0xe9, 0xa9, 0x6f, 0x1d, 0x8a, 0x82, 0xd5, 0x87, 0x50, 0xe9, 0xdd, 0x5f, 0xa4,
	0xea, 0x69, 0x76, 0xdf, 0xb1, 0xc5, 0x7d, 0xf8, 0xeb, 0xa1, 0x82, 0x1e, 0x80, 0xb3, 0x75, 0x81,
	0xa9, 0x94, 0xfe, 0xed, 0x50, 0x41, 0xf7, 0xc1, 0xdd, 0xf9, 0xce, 0x21, 0xf8, 0x92, 0x7f, 0xc5,
	0xf4, 0xb6, 0xb2, 0x02, 0xf5, 0x1d, 0x03, 0xab, 0xef, 0x1e, 0x2a, 0x48, 0x83, 0xd5, 0x29, 0x11,
	0xdb, 0x21, 0x7d, 0xdd, 0x92, 0x32, 0xef, 0x1d, 0x2a, 0xe7, 0x9e, 0x57, 0x60, 0x3e, 0xff, 0x8f,
	0x19, 0x21, 0x58, 0x32, 0xf9, 0xfd, 0xf1, 0xb6, 0x5d, 0x9e, 0x36, 0x1b, 0xab, 0x77, 0xa1, 0x15,
	0xe8, 0x94, 0xd8, 0x86, 0xf3, 0x84, 0xaa, 0xd4, 0xc5, 0xf8, 0x20, 0x54, 0x1b, 0xe8, 0x04, 0xac,
	0x94, 0x58, 0x1e, 0x4d, 0x93, 0xbf, 0x77, 0x4c, 0xaf, 0x8f, 0x25, 0x2c, 0xdc, 0x53, 0x5b, 0x75,
	0x10, 0xf7, 0x5d, 0x6f, 0x5b, 0x9d, 0x39, 0x47, 0x01, 0xca, 0x7f, 0xac, 0xb9, 0xd5, 0x9e, 0x27,
	0x32, 0x93, 0xb5, 0xca, 0x5d, 0x7c, 0x50, 0xf4, 0xbc, 0x5a, 0x07, 0x19, 0xaa, 0x82, 0x3a, 0xd0,
	0xee, 0x79, 0xbe, 0x69, 0x8b, 0xe6, 0x68, 0x64, 0x24, 0xdf, 0x96, 0x03, 0x57, 0x6d, 0x9e, 0x7b,
	0x0a, 0x3a, 0xc5, 0x87, 0x9b, 0x88, 0xf0, 0x34, 0x9c, 0x90, 0x73, 0x4c, 0xb4, 0x56, 0xc5, 0x01,
	0xe5, 0x28, 0x96, 0xa0, 0xd5, 0x06, 0x3a, 0x05, 0xc7, 0x26, 0x59, 0x3c, 0x13, 0xcd, 0xff, 0x06,
	0x00, 0x00, 0xff, 0xff, 0xe4, 0x55, 0x18, 0xaa, 0xd0, 0x1b, 0x00, 0x00,
}
