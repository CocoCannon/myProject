import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'

android {
    compileSdkVersion PROP_COMPILE_SDK_VERSION.toInteger()
    buildToolsVersion PROP_BUILD_TOOLS_VERSION

    defaultConfig {
        applicationId "com.kys.wulin.qihoo"
        minSdkVersion PROP_MIN_SDK_VERSION
        targetSdkVersion PROP_TARGET_SDK_VERSION
        versionCode 100
        versionName "1.0.5"
//        multiDexEnabled true
        useLibrary 'org.apache.http.legacy'

        externalNativeBuild {
            ndkBuild {
                if (!project.hasProperty("PROP_NDK_MODE") || PROP_NDK_MODE.compareTo('none') != 0) {
                    // skip the NDK Build step if PROP_NDK_MODE is none
                    targets 'cocos2djs'
                    arguments 'NDK_TOOLCHAIN_VERSION=clang'

                    def module_paths = [project.file("../../../cocos2d-x"),
                                        project.file("../../../cocos2d-x/cocos"),
                                        project.file("../../../cocos2d-x/external")]
                    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
                        arguments 'NDK_MODULE_PATH=' + module_paths.join(";")
                    } else {
                        arguments 'NDK_MODULE_PATH=' + module_paths.join(':')
                    }

                    arguments '-j' + Runtime.runtime.availableProcessors()
                    abiFilters.addAll(PROP_APP_ABI.split(':').collect { it as String })
                }
            }
        }

        ndk {
            abiFilters PROP_APP_ABI
        }
    }

    sourceSets.main {
        java.srcDirs "../src", "src"
        res.srcDirs "../res", 'res'
        jniLibs.srcDirs "../libs", 'libs'
        manifest.srcFile "AndroidManifest.xml"
    }

    externalNativeBuild {
        ndkBuild {
            if (!project.hasProperty("PROP_NDK_MODE") || PROP_NDK_MODE.compareTo('none') != 0) {
                // skip the NDK Build step if PROP_NDK_MODE is none
                path "jni/Android.mk"
            }
        }
    }

    signingConfigs {
        release {
            if (project.hasProperty("RELEASE_JKS_FILE")) {
                storeFile file(RELEASE_JKS_FILE)
                storePassword RELEASE_JKS_PASSWORD
                keyAlias RELEASE_JKS_ALIAS
                keyPassword RELEASE_JKS_ALIAS_PASSWORD
            }
        }

        debug {
            if (project.hasProperty("RELEASE_JKS_FILE")) {
                storeFile file(RELEASE_JKS_FILE)
                storePassword RELEASE_JKS_PASSWORD
                keyAlias RELEASE_JKS_ALIAS
                keyPassword RELEASE_JKS_ALIAS_PASSWORD
            }
        }
    }

    buildTypes {
        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                signingConfig signingConfigs.release
            }

            externalNativeBuild {
                ndkBuild {
                    arguments 'NDK_DEBUG=0'
                }
            }
        }

        debug {
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            if (project.hasProperty("DEBUG_STORE_FILE")) {
                signingConfig signingConfigs.debug
            }
            externalNativeBuild {
                ndkBuild {
                    arguments 'NDK_DEBUG=1'
                }
            }
        }
    }
}

android.applicationVariants.all { variant ->
    // delete previous files first
    delete "${buildDir}/intermediates/merged_assets/${variant.dirName}"

    variant.mergeAssets.doLast {
        def sourceDir = "${buildDir}/../../../../.."

        copy {
            from "${sourceDir}/assets"
            into "${outputDir}/assets"
        }

        copy {
            from "${sourceDir}/src"
            into "${outputDir}/src"
        }

        copy {
            from "${sourceDir}/jsb-adapter"
            into "${outputDir}/jsb-adapter"
        }

        copy {
            from "${sourceDir}/main.js"
            from "${sourceDir}/project.json"
            into outputDir
        }

        copy {
            from "${buildDir}/../data.bin"
            into outputDir
        }
    }
}

dependencies {
    implementation fileTree(dir: '../libs', include: ['*.jar', '*.aar'])
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation fileTree(dir: "../../../cocos2d-x/cocos/platform/android/java/libs", include: ['*.jar'])
    implementation project(':libcocos2dx')
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    implementation 'com.umeng.umsdk:game:9.1.0+G'
//    implementation 'com.umeng.umsdk:common:2.0.0'
    implementation 'com.android.support:support-compat:28.0.0'
    api 'com.google.zxing:android-core:3.3.0'
    api 'com.google.zxing:core:3.3.2'
    provided files('libs/org.simalliance.openmobileapi.jar')


    //  推送机型相关
    implementation 'com.umeng.umsdk:huawei-basetb:2.6.3.306'
    implementation 'com.umeng.umsdk:huawei-pushtb:2.6.3.306'
    implementation 'com.umeng.umsdk:huawei-umengaccs:1.2.4'

    implementation 'com.umeng.umsdk:meizu-push:3.8.7'
    implementation 'com.umeng.umsdk:meizu-umengaccs:1.1.1'

    implementation 'com.umeng.umsdk:oppo-push:2.0.2'
    implementation 'com.umeng.umsdk:oppo-umengaccs:1.0.6'

    implementation 'com.umeng.umsdk:vivo-push:2.3.5'
    implementation 'com.umeng.umsdk:vivo-umengaccs:1.1.0'

    implementation 'com.umeng.umsdk:xiaomi-push:3.7.0'
    implementation 'com.umeng.umsdk:xiaomi-umengaccs:1.1.4'
    //基础组件库依赖(必须) Push 6.1.0版本必须升级新版本Common SDK
    implementation 'com.umeng.umsdk:common:9.1.0'
//    implementation 'com.umeng.umsdk:utdid:1.5.2' // alipay有
    implementation 'com.umeng.umsdk:asms:1.1.3'
    implementation 'com.umeng.umsdk:crash:0.0.4'

    //友盟push相关依赖(必须)
    implementation 'com.umeng.umsdk:push:6.1.0'

    implementation 'com.umeng.umsdk:alicloud-httpdns:1.2.5'
    implementation 'com.umeng.umsdk:alicloud-utils:1.1.5'
    implementation 'com.umeng.umsdk:alicloud_beacon:1.0.1'

    implementation 'com.umeng.umsdk:agoo-accs:3.3.8.8-open-fix2'
    implementation 'com.umeng.umsdk:agoo_networksdk:3.5.5'
    implementation 'com.umeng.umsdk:agoo_tlog:3.0.0.17'
    implementation 'com.umeng.umsdk:agoo_tnet4android:3.1.14.9'
}
